{"version":3,"file":"static/js/241.30f6f145.chunk.js","mappings":"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","sources":["components/UserSections/AddTripForm.jsx","pages/User/User.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst AddTripForm = () => {\n  const [data, setData] = useState({\n    title: '',\n    description: '',\n    categories: [\n      {\n        nameCategory: '',\n        todoList: [\n          {\n            todo: '',\n          },\n        ],\n        publicList: false,\n      },\n    ],\n    public: false,\n  });\n\n  useEffect(() => {\n    const savedData = JSON.parse(localStorage.getItem('data'));\n\n    if (savedData) {\n      setData(savedData);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data));\n  }, [data]);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleCategoryChange = (event, index) => {\n    const { name, value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[index] = {\n        ...newCategories[index],\n        [name]: value,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handleTodoChange = (event, categoryIndex, todoIndex) => {\n    const { value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      const newTodoList = [...newCategories[categoryIndex].todoList];\n      newTodoList[todoIndex] = {\n        todo: value,\n      };\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        todoList: newTodoList,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handlePublicChange = event => {\n    const { checked } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      public: checked,\n    }));\n  };\n\n  const handleCategoryPublicChange = (event, categoryIndex) => {\n    const { checked } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        publicList: checked,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const addCategory = () => {\n    setData(prevData => ({\n      ...prevData,\n      categories: [\n        ...prevData.categories,\n        {\n          nameCategory: '',\n          todoList: [\n            {\n              todo: '',\n            },\n          ],\n          publicList: false,\n        },\n      ],\n    }));\n  };\n\n  const addTodo = categoryIndex => {\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[categoryIndex].todoList.push({\n        todo: '',\n      });\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const deleteCategory = categoryIndex => {\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories.splice(categoryIndex, 1);\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const deleteTodo = (categoryIndex, todoIndex) => {\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[categoryIndex].todoList.splice(todoIndex, 1);\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const token = localStorage.getItem('token');\n    const url = 'http://localhost:3000/api/trips';\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(data),\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        console.log('Response:', responseData);\n        // Додаткова логіка після успішної відповіді з сервера\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        // Обробка помилки\n      });\n  };\n\n  return (\n    <>\n      <h1>Form</h1>\n      <form onSubmit={handleSubmit}>\n        {/* Title */}\n        <label htmlFor=\"title\">Title</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={data.title}\n          onChange={handleChange}\n        />\n\n        {/* Description */}\n        <label htmlFor=\"description\">Description</label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          value={data.description}\n          onChange={handleChange}\n        />\n\n        {/* Categories */}\n        <h2>Categories</h2>\n        {data.categories.map((category, categoryIndex) => (\n          <div key={categoryIndex}>\n            <label htmlFor={`category-${categoryIndex}`}>Category Name</label>\n            <input\n              type=\"text\"\n              id={`category-${categoryIndex}`}\n              name=\"nameCategory\"\n              value={category.nameCategory}\n              onChange={event => handleCategoryChange(event, categoryIndex)}\n            />\n\n            {/* Category Public */}\n            <label htmlFor={`category-public-${categoryIndex}`}>Public</label>\n            <input\n              type=\"checkbox\"\n              id={`category-public-${categoryIndex}`}\n              name=\"publicList\"\n              checked={category.publicList}\n              onChange={event =>\n                handleCategoryPublicChange(event, categoryIndex)\n              }\n            />\n\n            {/* Todo List */}\n            <h3>Todo List</h3>\n            {category.todoList.map((todo, todoIndex) => (\n              <div key={todoIndex}>\n                <label htmlFor={`todo-${categoryIndex}-${todoIndex}`}>\n                  Todo\n                </label>\n                <input\n                  type=\"text\"\n                  id={`todo-${categoryIndex}-${todoIndex}`}\n                  name=\"todo\"\n                  value={todo.todo}\n                  onChange={event =>\n                    handleTodoChange(event, categoryIndex, todoIndex)\n                  }\n                />\n\n                {/* Delete Todo */}\n                <button\n                  type=\"button\"\n                  onClick={() => deleteTodo(categoryIndex, todoIndex)}\n                >\n                  Delete Todo\n                </button>\n              </div>\n            ))}\n\n            {/* Add Todo */}\n            <button type=\"button\" onClick={() => addTodo(categoryIndex)}>\n              Add Todo\n            </button>\n\n            {/* Delete Category */}\n            <button type=\"button\" onClick={() => deleteCategory(categoryIndex)}>\n              Delete Category\n            </button>\n          </div>\n        ))}\n\n        {/* Add Category */}\n        <button type=\"button\" onClick={addCategory}>\n          Add Category\n        </button>\n\n        {/* Public */}\n        <label htmlFor=\"public\">Public</label>\n        <input\n          type=\"checkbox\"\n          id=\"public\"\n          name=\"public\"\n          checked={data.public}\n          onChange={handlePublicChange}\n        />\n\n        {/* Submit */}\n        <button type=\"submit\">Submit</button>\n      </form>\n    </>\n  );\n};\n\nexport default AddTripForm;\n","import AddTripForm from '../../components/UserSections/AddTripForm';\n\nconst User = () => {\n  return (\n    <>\n      <h1>User</h1>\n      <AddTripForm></AddTripForm>\n    </>\n  );\n};\n\nexport default User;"],"names":["_useState","useState","title","description","categories","nameCategory","todoList","todo","publicList","public","_useState2","_slicedToArray","data","setData","useEffect","savedData","JSON","parse","localStorage","getItem","setItem","stringify","handleChange","event","_event$target","target","name","value","prevData","_objectSpread","_defineProperty","_jsxs","_Fragment","children","_jsx","onSubmit","preventDefault","token","fetch","method","headers","Authorization","concat","body","then","response","json","responseData","console","log","catch","error","htmlFor","type","id","onChange","map","category","categoryIndex","index","_event$target2","newCategories","_toConsumableArray","handleCategoryChange","checked","handleCategoryPublicChange","todoIndex","newTodoList","handleTodoChange","onClick","splice","deleteTodo","push","addTodo","deleteCategory","AddTripForm"],"sourceRoot":""}