{"version":3,"file":"static/js/431.e997849b.chunk.js","mappings":"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","sources":["components/UserSections/AddTripForm/AddPhotos/AddPhotos.jsx","components/UserSections/AddTripForm/AddTripForm.jsx","components/UserSections/AllUserTrips/AllUserTrips.style.jsx","components/UserSections/AllUserTrips/AllUserTrips.jsx","components/UserSections/UpdateTrip/UpdateTrip.jsx","pages/User/User.style.jsx","pages/User/User.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as LR from '@uploadcare/blocks';\nimport '@uploadcare/blocks/web/lr-file-uploader-regular.min.css';\n\nLR.registerBlocks(LR);\n\nconst AddPhotos = ({ onCdnUrlsChange }) => {\n  const [files, setFiles] = useState([]);\n  const [cdnUrls, setCdnUrls] = useState([]);\n  const ctxProviderRef = useRef(null);\n\n  useEffect(() => {\n    const ctxProvider = ctxProviderRef.current;\n    if (!ctxProvider) return;\n\n    const handleChangeEvent = event => {\n      const newFiles = event.detail.allEntries.filter(\n        file => file.status === 'success'\n      );\n      setFiles(newFiles);\n      setCdnUrls(prevCdnUrls => {\n        const newUrls = newFiles.map(file => ({\n          cdnUrl: file.cdnUrl,\n          uuid: file.uuid,\n        }));\n        const uniqueUrls = [\n          ...prevCdnUrls,\n          ...newUrls.filter(\n            newUrl => !prevCdnUrls.some(url => url.cdnUrl === newUrl.cdnUrl)\n          ),\n        ];\n        return uniqueUrls;\n      });\n      // setCdnUrls(prevCdnUrls => {\n      //   const newUrls = newFiles.map(file => file.cdnUrl);\n      //   const uniqueUrls = Array.from(new Set([...prevCdnUrls, ...newUrls]));\n      //   return uniqueUrls;\n      // });\n    };\n\n    ctxProvider.addEventListener('change', handleChangeEvent);\n\n    return () => {\n      ctxProvider.removeEventListener('change', handleChangeEvent);\n    };\n  }, []);\n\n  useEffect(() => {\n    onCdnUrlsChange(cdnUrls);\n  }, [cdnUrls]);\n\n  return (\n    <div>\n      <lr-config ctx-name=\"my-uploader\" pubkey=\"274c6cf9681b13936265\" />\n\n      <lr-file-uploader-regular ctx-name=\"my-uploader\" />\n\n      <lr-upload-ctx-provider ctx-name=\"my-uploader\" ref={ctxProviderRef} />\n\n      <div>\n        {files.map(file => (\n          <div key={file.uuid}>\n            <img src={file.cdnUrl} alt={file.fileInfo.originalFilename} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AddPhotos;\n\n// import React, { useEffect, useRef, useState } from 'react';\n// import * as LR from '@uploadcare/blocks';\n// import '@uploadcare/blocks/web/lr-file-uploader-regular.min.css';\n\n// LR.registerBlocks(LR);\n\n// const UploadComponent = () => {\n//   const [files, setFiles] = useState([]);\n//   const ctxProviderRef = useRef(null);\n\n//   useEffect(() => {\n//     const ctxProvider = ctxProviderRef.current;\n//     if (!ctxProvider) return;\n\n//     const handleChangeEvent = event => {\n//       setFiles([\n//         ...event.detail.allEntries.filter(file => file.status === 'success'),\n//       ]);\n//     };\n\n//     ctxProvider.addEventListener('change', handleChangeEvent);\n\n//     return () => {\n//       ctxProvider.removeEventListener('change', handleChangeEvent);\n//     };\n//   }, [setFiles]);\n\n//   return (\n//     <div>\n//       <lr-config ctx-name=\"my-uploader\" pubkey=\"274c6cf9681b13936265\" />\n\n//       <lr-file-uploader-regular ctx-name=\"my-uploader\" />\n\n//       <lr-upload-ctx-provider ctx-name=\"my-uploader\" ref={ctxProviderRef} />\n\n//       <div>\n//         {files.map(file => (\n//           <div key={file.uuid}>\n//             <img src={file.cdnUrl} alt={file.fileInfo.originalFilename} />\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UploadComponent;\n","import { useState, useEffect } from 'react';\nimport AddPhotos from './AddPhotos/AddPhotos';\n\n// import {\n//   FormWrapper,\n//   FormTitle,\n//   FormElement,\n//   Label,\n//   Input,\n//   Checkbox,\n//   Button,\n//   CategoryContainer,\n//   TodoContainer,\n//   TodoInput,\n//   SmallButton,\n// } from './AddTripForm.style';\n\nconst AddTripForm = () => {\n  const initialState = {\n    title: '',\n    description: '',\n    categories: [\n      {\n        nameCategory: '',\n        todoList: [\n          {\n            todo: '',\n          },\n        ],\n        publicList: false,\n      },\n    ],\n    isPublic: false,\n    photos: [],\n  };\n\n  const [data, setData] = useState(initialState);\n  const [cdnUrls, setCdnUrls] = useState([]);\n\n  useEffect(() => {\n    const savedData = JSON.parse(localStorage.getItem('data'));\n\n    if (savedData) {\n      setData(savedData);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data));\n  }, [data]);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleCategoryChange = (event, index) => {\n    const { name, value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[index] = {\n        ...newCategories[index],\n        [name]: value,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handleTodoChange = (event, categoryIndex, todoIndex) => {\n    const { value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      const newTodoList = [...newCategories[categoryIndex].todoList];\n      newTodoList[todoIndex] = {\n        todo: value,\n      };\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        todoList: newTodoList,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handlePublicChange = event => {\n    const { checked } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      isPublic: checked,\n    }));\n  };\n\n  const handleCategoryPublicChange = (event, categoryIndex) => {\n    const { checked } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        publicList: checked,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const addCategory = () => {\n    setData(prevData => ({\n      ...prevData,\n      categories: [\n        ...prevData.categories,\n        {\n          nameCategory: '',\n          todoList: [\n            {\n              todo: '',\n            },\n          ],\n          publicList: false,\n        },\n      ],\n    }));\n  };\n\n  const addTodo = categoryIndex => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.push({\n      todo: '',\n    });\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const deleteCategory = categoryIndex => {\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories.splice(categoryIndex, 1);\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const deleteTodo = (categoryIndex, todoIndex) => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.splice(todoIndex, 1);\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const handleCdnUrlsChange = urls => {\n    setCdnUrls(urls);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const token = localStorage.getItem('token');\n    const url = 'http://localhost:3000/api/trips';\n\n    const updatedData = {\n      ...data,\n      photos: cdnUrls,\n    };\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(updatedData),\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        console.log('Response:', responseData);\n        setData(initialState);\n        localStorage.removeItem('data');\n        setCdnUrls([]);\n        window.location.reload();\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <>\n      <h1>Form</h1>\n      <form onSubmit={handleSubmit}>\n        {/* Title */}\n        <label htmlFor=\"title\">Title</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={data.title}\n          onChange={handleChange}\n        />\n\n        {/* Description */}\n        <label htmlFor=\"description\">Description</label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          value={data.description}\n          onChange={handleChange}\n        />\n\n        {/* Categories */}\n        <h2>Categories</h2>\n        {data.categories.map((category, categoryIndex) => (\n          <div key={categoryIndex}>\n            <label htmlFor={`category-${categoryIndex}`}>Category Name</label>\n            <input\n              type=\"text\"\n              id={`category-${categoryIndex}`}\n              name=\"nameCategory\"\n              value={category.nameCategory}\n              onChange={event => handleCategoryChange(event, categoryIndex)}\n            />\n\n            {/* Category Public */}\n            <label htmlFor={`category-public-${categoryIndex}`}>Public</label>\n            <input\n              type=\"checkbox\"\n              id={`category-public-${categoryIndex}`}\n              name=\"publicList\"\n              checked={category.publicList}\n              onChange={event =>\n                handleCategoryPublicChange(event, categoryIndex)\n              }\n            />\n\n            {/* Todo List */}\n            <h3>Todo List</h3>\n            {category.todoList.map((todo, todoIndex) => (\n              <div key={todoIndex}>\n                <label htmlFor={`todo-${categoryIndex}-${todoIndex}`}>\n                  Todo\n                </label>\n                <input\n                  type=\"text\"\n                  id={`todo-${categoryIndex}-${todoIndex}`}\n                  name=\"todo\"\n                  value={todo.todo}\n                  onChange={event =>\n                    handleTodoChange(event, categoryIndex, todoIndex)\n                  }\n                />\n\n                {/* Delete Todo */}\n                <button\n                  type=\"button\"\n                  onClick={() => deleteTodo(categoryIndex, todoIndex)}\n                >\n                  Delete Todo\n                </button>\n              </div>\n            ))}\n\n            {/* Add Todo */}\n            <button type=\"button\" onClick={() => addTodo(categoryIndex)}>\n              Add Todo\n            </button>\n\n            {/* Delete Category */}\n            <button\n              type=\"button\"\n              onClick={() => deleteCategory(categoryIndex)}\n            >\n              Delete Category\n            </button>\n          </div>\n        ))}\n\n        {/* Add Category */}\n        <button type=\"button\" onClick={addCategory}>\n          Add Category\n        </button>\n\n        {/* Public */}\n        <label htmlFor=\"isPublic\">Public</label>\n        <input\n          type=\"checkbox\"\n          id=\"isPublic\"\n          name=\"isPublic\"\n          checked={data.isPublic}\n          onChange={handlePublicChange}\n        />\n\n        <AddPhotos onCdnUrlsChange={handleCdnUrlsChange} />\n\n        {/* Submit */}\n        <button type=\"submit\">Submit</button>\n      </form>\n    </>\n  );\n};\n\nexport default AddTripForm;\n","import styled from 'styled-components';\n\nexport const TripDescription = styled.p`\n  color: #666;\n  font-size: 14px;\n  line-height: 5px;\n  margin-bottom: 16px;\n`;\n\nexport const Category = styled.h3`\n  margin-bottom: 6px;\n`;\n\nexport const CategoryName = styled.h4`\n  color: #555;\n  margin-bottom: 3px;\n`;\n\nexport const TodoList = styled.ul`\n  list-style-type: disc;\n  margin-bottom: 6px;\n  margin-left: 15px;\n`;\n\nexport const TodoItem = styled.li`\n  color: #777;\n`;\n\nexport const PhotoList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`;\n\nexport const Photo = styled.li`\n  width: 150px;\n`;\n","/* eslint-disable jsx-a11y/img-redundant-alt */\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Col, Row } from 'antd';\nimport {\n  TripDescription,\n  Category,\n  CategoryName,\n  TodoList,\n  TodoItem,\n  PhotoList,\n  Photo,\n} from './AllUserTrips.style';\n\nconst AllUserTrips = () => {\n  const [trips, setTrips] = useState([]);\n  const token = localStorage.getItem('token');\n\n  useEffect(() => {\n    fetch('http://localhost:3000/api/trips', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(response => response.json())\n      .then(data => setTrips(data))\n      .catch(error => console.error('Error fetching trips:', error));\n  }, [token]);\n\n  return (\n    <>\n      <Row gutter={16}>\n        {trips.map(trip => (\n          <Col span={8} key={trip._id}>\n            <Card\n              style={{ marginBottom: '15px' }}\n              title={trip.title}\n              bordered={false}\n              headStyle={{ backgroundColor: '#8DD3BB', color: '#fafbfc' }}\n            >\n              <TripDescription>{trip.description}</TripDescription>\n              <Category>Categories:</Category>\n              <ul>\n                {trip.categories.map((category, index) => (\n                  <li key={index}>\n                    <CategoryName>{category.nameCategory}</CategoryName>\n                    <TodoList>\n                      {category.todoList.map((todo, index) => (\n                        <TodoItem key={index}>{todo.todo}</TodoItem>\n                      ))}\n                    </TodoList>\n                  </li>\n                ))}\n              </ul>\n              <p>Public: {trip.isPublic ? 'Yes' : 'No'}</p>\n              {trip.photos.length > 0 && (\n                <div>\n                  <h3>Photos:</h3>\n                  <PhotoList>\n                    {trip.photos.map((photo, index) => (\n                      <Photo key={index}>\n                        <img src={photo.cdnUrl} alt={`Photo ${index + 1}`} />\n                      </Photo>\n                    ))}\n                  </PhotoList>\n                </div>\n              )}\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default AllUserTrips;\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { useState, useEffect } from 'react';\nimport {\n  deleteFile,\n  deleteFiles,\n  UploadcareSimpleAuthSchema,\n} from '@uploadcare/rest-client';\n\nimport AddPhotos from '../AddTripForm/AddPhotos/AddPhotos';\n\nconst UpdateTrip = () => {\n  const initialState = {\n    title: '',\n    description: '',\n    categories: [\n      {\n        nameCategory: '',\n        todoList: [\n          {\n            todo: '',\n          },\n        ],\n        publicList: false,\n      },\n    ],\n    isPublic: false,\n    photos: [],\n  };\n\n  const [data, setData] = useState(initialState);\n  const [cdnUrls, setCdnUrls] = useState([]);\n  const [trips, setTrips] = useState([]);\n  const [selectedTripId, setSelectedTripId] = useState(null);\n  const [isTripSelected, setIsTripSelected] = useState(false);\n  const [uploadcareSimpleAuthSchema, setUploadcareSimpleAuthSchema] =\n    useState(null);\n\n  // const uploadcareSimpleAuthSchema = new UploadcareSimpleAuthSchema({\n  //   publicKey: \"274c6cf9681b13936265\",\n  //   secretKey: \"9cfba5a3ce13072e7ac2\",\n  // });\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const url = 'http://localhost:3000/api/trips/keys';\n\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        setUploadcareSimpleAuthSchema(\n          new UploadcareSimpleAuthSchema({\n            publicKey: data.publicKey,\n            secretKey: data.secretKey,\n          })\n        );\n      })\n      .catch(error => {\n        console.error('Error fetching keys:', error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const savedData = JSON.parse(localStorage.getItem('data'));\n\n    if (savedData) {\n      setData(savedData);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data));\n  }, [data]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const url = 'http://localhost:3000/api/trips';\n\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        setTrips(responseData);\n      })\n      .catch(error => {\n        console.error('Error fetching trips:', error);\n      });\n  }, []);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleCategoryChange = (event, index) => {\n    const { name, value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[index] = {\n        ...newCategories[index],\n        [name]: value,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handleTodoChange = (event, categoryIndex, todoIndex) => {\n    const { value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      const newTodoList = [...newCategories[categoryIndex].todoList];\n      newTodoList[todoIndex] = {\n        todo: value,\n      };\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        todoList: newTodoList,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handlePublicChange = event => {\n    const { checked } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      isPublic: checked,\n    }));\n  };\n\n  const handleCategoryPublicChange = (event, categoryIndex) => {\n    const { checked } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        publicList: checked,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const addCategory = () => {\n    setData(prevData => ({\n      ...prevData,\n      categories: [\n        ...prevData.categories,\n        {\n          nameCategory: '',\n          todoList: [\n            {\n              todo: '',\n            },\n          ],\n          publicList: false,\n        },\n      ],\n    }));\n  };\n\n  const addTodo = categoryIndex => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.push({\n      todo: '',\n    });\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const deleteCategory = categoryIndex => {\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories.splice(categoryIndex, 1);\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const deleteTodo = (categoryIndex, todoIndex) => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.splice(todoIndex, 1);\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const handleCdnUrlsChange = urls => {\n    setCdnUrls(urls);\n  };\n\n  // const handlePhotoDelete = index => {\n  //   const updatedPhotos = [...data.photos];\n  //   updatedPhotos.splice(index, 1);\n  //   setData(prevData => ({\n  //     ...prevData,\n  //     photos: updatedPhotos,\n  //   }));\n  // };\n  const handlePhotoDelete = index => {\n    const updatedPhotos = [...data.photos];\n    const deletedPhoto = updatedPhotos.splice(index, 1)[0];\n\n    // Видалення фото з Uploadcare за його UUID\n    deleteFile(\n      { uuid: deletedPhoto.uuid },\n      { authSchema: uploadcareSimpleAuthSchema }\n    )\n      .then(() => {\n        console.log('Photo successfully deleted from Uploadcare');\n      })\n      .catch(error => {\n        console.error('Error deleting photo from Uploadcare:', error);\n      });\n\n    setData(prevData => ({\n      ...prevData,\n      photos: updatedPhotos,\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const token = localStorage.getItem('token');\n    const url = `http://localhost:3000/api/trips/${selectedTripId}`;\n\n    const updatedPhotos = data.photos.map(photo => {\n      const cdnUrl = cdnUrls.find(url => url === photo.cdnUrl);\n      return cdnUrl\n        ? { cdnUrl, uuid: photo.uuid }\n        : { cdnUrl: photo.cdnUrl, uuid: photo.uuid };\n    });\n\n    cdnUrls.forEach(newPhoto => {\n      if (!data.photos.find(photo => photo.cdnUrl === newPhoto.cdnUrl)) {\n        updatedPhotos.push({ cdnUrl: newPhoto.cdnUrl, uuid: newPhoto.uuid });\n      }\n    });\n\n    const updatedData = {\n      ...data,\n      categories: data.categories.map(category => ({\n        nameCategory: category.nameCategory,\n        todoList: category.todoList.map(todo => ({\n          todo: todo.todo,\n        })),\n        publicList: category.publicList,\n      })),\n      photos: [...updatedPhotos],\n    };\n\n    fetch(url, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(updatedData),\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        console.log('Response:', responseData);\n        setData(initialState);\n        localStorage.removeItem('data');\n        setCdnUrls([]);\n        // window.location.reload();\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  const handleTripSelect = tripId => {\n    const selectedTrip = trips.find(trip => trip._id === tripId);\n    setData({\n      title: selectedTrip.title,\n      description: selectedTrip.description,\n      categories: selectedTrip.categories.map(category => ({\n        nameCategory: category.nameCategory,\n        todoList: category.todoList.map(todo => ({\n          todo: todo.todo,\n        })),\n        publicList: category.publicList,\n      })),\n      isPublic: selectedTrip.isPublic,\n      photos: selectedTrip.photos.map(photo => ({\n        cdnUrl: photo.cdnUrl,\n        uuid: photo.uuid,\n      })),\n    });\n    setCdnUrls(selectedTrip.photos.map(photo => photo.cdnUrl));\n    setSelectedTripId(tripId);\n    setIsTripSelected(true);\n  };\n\n  const handleDeleteTrip = () => {\n    const token = localStorage.getItem('token');\n    const url = `http://localhost:3000/api/trips/${selectedTripId}`;\n\n    const photoUUIDs = data.photos.map(photo => photo.uuid);\n\n    fetch(url, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        console.log('Trip deleted:', responseData);\n        setData(initialState);\n        localStorage.removeItem('data');\n        setCdnUrls([]);\n        setIsTripSelected(false);\n        setTrips(trips.filter(trip => trip._id !== selectedTripId));\n      })\n      .catch(error => {\n        console.error('Error deleting trip:', error);\n      });\n\n    if (photoUUIDs.length > 0) {\n      deleteFiles(\n        { uuids: photoUUIDs },\n        { authSchema: uploadcareSimpleAuthSchema }\n      )\n        .then(() => {\n          console.log(\n            `Photos successfully deleted from Uploadcare: ${photoUUIDs.join(\n              ', '\n            )}`\n          );\n        })\n        .catch(error => {\n          console.error('Error deleting photos from Uploadcare:', error);\n        });\n    }\n  };\n\n  return (\n    <>\n      <h1>Form</h1>\n\n      <h2>Select Trip to Edit</h2>\n      <ul>\n        {trips.map(trip => (\n          <li key={trip._id} onClick={() => handleTripSelect(trip._id)}>\n            {trip.title}\n          </li>\n        ))}\n      </ul>\n\n      {isTripSelected && (\n        <>\n          <form onSubmit={handleSubmit}>\n            {/* Title */}\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              value={data.title}\n              onChange={handleChange}\n            />\n\n            {/* Description */}\n            <label htmlFor=\"description\">Description</label>\n            <input\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={data.description}\n              onChange={handleChange}\n            />\n\n            {/* Categories */}\n            <h2>Categories</h2>\n            {data.categories.map((category, categoryIndex) => (\n              <div key={categoryIndex}>\n                <label htmlFor={`category-${categoryIndex}`}>\n                  Category Name\n                </label>\n                <input\n                  type=\"text\"\n                  id={`category-${categoryIndex}`}\n                  name=\"nameCategory\"\n                  value={category.nameCategory}\n                  onChange={event => handleCategoryChange(event, categoryIndex)}\n                />\n\n                {/* Category Public */}\n                <label htmlFor={`category-public-${categoryIndex}`}>\n                  Public\n                </label>\n                <input\n                  type=\"checkbox\"\n                  id={`category-public-${categoryIndex}`}\n                  name=\"publicList\"\n                  checked={category.publicList}\n                  onChange={event =>\n                    handleCategoryPublicChange(event, categoryIndex)\n                  }\n                />\n\n                {/* Todo List */}\n                <h3>Todo List</h3>\n                {category.todoList.map((todo, todoIndex) => (\n                  <div key={todoIndex}>\n                    <label htmlFor={`todo-${categoryIndex}-${todoIndex}`}>\n                      Todo\n                    </label>\n                    <input\n                      type=\"text\"\n                      id={`todo-${categoryIndex}-${todoIndex}`}\n                      name=\"todo\"\n                      value={todo.todo}\n                      onChange={event =>\n                        handleTodoChange(event, categoryIndex, todoIndex)\n                      }\n                    />\n\n                    {/* Delete Todo */}\n                    <button\n                      type=\"button\"\n                      onClick={() => deleteTodo(categoryIndex, todoIndex)}\n                    >\n                      Delete Todo\n                    </button>\n                  </div>\n                ))}\n\n                {/* Add Todo */}\n                <button type=\"button\" onClick={() => addTodo(categoryIndex)}>\n                  Add Todo\n                </button>\n\n                {/* Delete Category */}\n                <button\n                  type=\"button\"\n                  onClick={() => deleteCategory(categoryIndex)}\n                >\n                  Delete Category\n                </button>\n              </div>\n            ))}\n\n            {/* Add Category */}\n            <button type=\"button\" onClick={addCategory}>\n              Add Category\n            </button>\n\n            {/* Public */}\n            <label htmlFor=\"isPublic\">Public</label>\n            <input\n              type=\"checkbox\"\n              id=\"isPublic\"\n              name=\"isPublic\"\n              checked={data.isPublic}\n              onChange={handlePublicChange}\n            />\n\n            <ul>\n              {data.photos.map((photo, index) => (\n                <li key={index}>\n                  <img src={photo.cdnUrl} alt={`Trip photo ${index}`} />\n                  <button onClick={() => handlePhotoDelete(index)}>\n                    Delete\n                  </button>\n                </li>\n              ))}\n            </ul>\n\n            <AddPhotos onCdnUrlsChange={handleCdnUrlsChange} />\n\n            {/* Submit */}\n            <button type=\"submit\">Submit</button>\n          </form>\n\n          {/* Delete Trip */}\n          <button type=\"button\" onClick={handleDeleteTrip}>\n            Delete Trip\n          </button>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default UpdateTrip;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1262px;\n  margin: 0 auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-top: 70px;\n`;","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport AddTripForm from '../../components/UserSections/AddTripForm/AddTripForm';\nimport AllUserTrips from '../../components/UserSections/AllUserTrips/AllUserTrips';\nimport UpdateTrip from '../../components/UserSections/UpdateTrip/UpdateTrip';\n\nimport { Container } from './User.style';\n\nfunction CustomTabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nCustomTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst User = () => {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Container>\n      <Box sx={{ width: '100%' }}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"user tabs\"\n            centered\n          >\n            <Tab label=\"Add Trip\" {...a11yProps(0)} />\n            <Tab label=\"All Trips\" {...a11yProps(1)} />\n            <Tab label=\"Update Trip\" {...a11yProps(2)} />\n          </Tabs>\n        </Box>\n        <CustomTabPanel value={value} index={0}>\n          <AddTripForm />\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={1}>\n          <AllUserTrips />\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={2}>\n          <UpdateTrip />\n        </CustomTabPanel>\n      </Box>\n    </Container>\n  );\n};\n\nexport default User;\n"],"names":["LR","_ref","onCdnUrlsChange","_useState","useState","_useState2","_slicedToArray","files","setFiles","_useState3","_useState4","cdnUrls","setCdnUrls","ctxProviderRef","useRef","useEffect","ctxProvider","current","handleChangeEvent","event","newFiles","detail","allEntries","filter","file","status","prevCdnUrls","newUrls","map","cdnUrl","uuid","concat","_toConsumableArray","newUrl","some","url","addEventListener","removeEventListener","_jsxs","children","_jsx","pubkey","ref","src","alt","fileInfo","originalFilename","initialState","title","description","categories","nameCategory","todoList","todo","publicList","isPublic","photos","data","setData","savedData","JSON","parse","localStorage","getItem","setItem","stringify","handleChange","_event$target","target","name","value","prevData","_objectSpread","_defineProperty","_Fragment","onSubmit","preventDefault","token","updatedData","fetch","method","headers","Authorization","body","then","response","json","responseData","console","log","removeItem","window","location","reload","catch","error","htmlFor","type","id","onChange","category","categoryIndex","index","_event$target2","newCategories","handleCategoryChange","checked","handleCategoryPublicChange","todoIndex","newTodoList","handleTodoChange","onClick","updatedCategories","splice","deleteTodo","push","addTodo","deleteCategory","AddPhotos","urls","TripDescription","styled","_templateObject","_taggedTemplateLiteral","Category","_templateObject2","CategoryName","_templateObject3","TodoList","_templateObject4","TodoItem","_templateObject5","PhotoList","_templateObject6","Photo","_templateObject7","trips","setTrips","Row","gutter","trip","Col","span","Card","style","marginBottom","bordered","headStyle","backgroundColor","color","length","photo","_id","_useState5","_useState6","_useState7","_useState8","selectedTripId","setSelectedTripId","_useState9","_useState10","isTripSelected","setIsTripSelected","_useState11","_useState12","uploadcareSimpleAuthSchema","setUploadcareSimpleAuthSchema","UploadcareSimpleAuthSchema","publicKey","secretKey","tripId","selectedTrip","find","handleTripSelect","updatedPhotos","forEach","newPhoto","deletedPhoto","deleteFile","authSchema","handlePhotoDelete","photoUUIDs","deleteFiles","uuids","join","Container","CustomTabPanel","props","other","_objectWithoutProperties","_excluded","role","hidden","Box","sx","p","Typography","a11yProps","_React$useState","React","_React$useState2","setValue","width","borderBottom","borderColor","Tabs","newValue","centered","Tab","label","AddTripForm","AllUserTrips","UpdateTrip"],"sourceRoot":""}