{"version":3,"file":"static/js/605.58e0c5df.chunk.js","mappings":"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","sources":["components/UserSections/AddTripForm/AddPhotos/AddPhotos.style.jsx","components/UserSections/AddTripForm/AddPhotos/AddPhotos.jsx","components/UserSections/AddTripForm/AddTripForm.style.jsx","components/UserSections/AddTripForm/AddTripForm.jsx","components/UserSections/AllUserTrips/AllUserTrips.style.jsx","components/UserSections/AllUserTrips/AllUserTrips.jsx","components/UserSections/UpdateTrip/UpdateTrip.style.jsx","components/UserSections/UpdateTrip/UpdateTrip.jsx","pages/User/User.style.jsx","pages/User/User.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerImg = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  margin-top: 10px;\n`;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as LR from '@uploadcare/blocks';\nimport '@uploadcare/blocks/web/lr-file-uploader-regular.min.css';\n\nimport { ContainerImg } from './AddPhotos.style';\n\nLR.registerBlocks(LR);\n\nconst AddPhotos = ({ onCdnUrlsChange }) => {\n  const [files, setFiles] = useState([]);\n  const [cdnUrls, setCdnUrls] = useState([]);\n  const ctxProviderRef = useRef(null);\n\n  useEffect(() => {\n    const ctxProvider = ctxProviderRef.current;\n    if (!ctxProvider) return;\n\n    const handleChangeEvent = event => {\n      const newFiles = event.detail.allEntries.filter(\n        file => file.status === 'success'\n      );\n      setFiles(newFiles);\n      setCdnUrls(prevCdnUrls => {\n        const newUrls = newFiles.map(file => ({\n          cdnUrl: file.cdnUrl,\n          uuid: file.uuid,\n        }));\n        const uniqueUrls = [\n          ...prevCdnUrls,\n          ...newUrls.filter(\n            newUrl => !prevCdnUrls.some(url => url.cdnUrl === newUrl.cdnUrl)\n          ),\n        ];\n        return uniqueUrls;\n      });\n    };\n\n    ctxProvider.addEventListener('change', handleChangeEvent);\n\n    return () => {\n      ctxProvider.removeEventListener('change', handleChangeEvent);\n    };\n  }, []);\n\n  useEffect(() => {\n    onCdnUrlsChange(cdnUrls);\n  }, [cdnUrls]);\n\n  return (\n    <div>\n      <lr-config ctx-name=\"my-uploader\" pubkey=\"274c6cf9681b13936265\" />\n\n      <lr-file-uploader-regular ctx-name=\"my-uploader\" />\n\n      <lr-upload-ctx-provider ctx-name=\"my-uploader\" ref={ctxProviderRef} />\n\n      <ContainerImg>\n        {files.map(file => (\n          <div key={file.uuid}>\n            <img\n              style={{ width: '150px' }}\n              src={file.cdnUrl}\n              alt={file.fileInfo.originalFilename}\n            />\n          </div>\n        ))}\n      </ContainerImg>\n    </div>\n  );\n};\n\nexport default AddPhotos;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  max-width: 600px;\n  padding: 15px;\n  border: 1px solid #8dd3bb;\n  border-radius: 5px;\n  background-color: #fafafa;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  box-shadow: 0px 4px 16px 0px rgba(17, 34, 17, 0.05);\n`;\n\nexport const CategoriesDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n  border: 1px solid #8dd3bb;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  gap: 10px;\n`;\n\nexport const PublicCheckboxDiv = styled.div`\n  display: flex;\n  gap: 5px;\n`;\n\nexport const TodoDiv = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 7px;\n`;\n\nexport const ChangeDiv = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const BottomDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;","import { useState, useEffect } from 'react';\nimport AddPhotos from './AddPhotos/AddPhotos';\nimport { Input, Checkbox, Button } from 'antd';\nimport ButtonSend from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\n\nimport {\n  Form,\n  CategoriesDiv,\n  PublicCheckboxDiv,\n  TodoDiv,\n  ChangeDiv,\n  BottomDiv,\n} from './AddTripForm.style';\n\nconst { TextArea } = Input;\n\nconst AddTripForm = () => {\n  const initialState = {\n    title: '',\n    description: '',\n    categories: [\n      {\n        nameCategory: '',\n        todoList: [\n          {\n            todo: '',\n          },\n        ],\n        publicList: false,\n      },\n    ],\n    isPublic: false,\n    photos: [],\n  };\n\n  const [data, setData] = useState(initialState);\n  const [cdnUrls, setCdnUrls] = useState([]);\n\n  useEffect(() => {\n    const savedData = JSON.parse(localStorage.getItem('data'));\n\n    if (savedData) {\n      setData(savedData);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data));\n  }, [data]);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleCategoryChange = (event, index) => {\n    const { name, value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[index] = {\n        ...newCategories[index],\n        [name]: value,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handleTodoChange = (event, categoryIndex, todoIndex) => {\n    const { value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      const newTodoList = [...newCategories[categoryIndex].todoList];\n      newTodoList[todoIndex] = {\n        todo: value,\n      };\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        todoList: newTodoList,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handlePublicChange = event => {\n    const { checked } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      isPublic: checked,\n    }));\n  };\n\n  const handleCategoryPublicChange = (event, categoryIndex) => {\n    const { checked } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        publicList: checked,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const addCategory = () => {\n    setData(prevData => ({\n      ...prevData,\n      categories: [\n        ...prevData.categories,\n        {\n          nameCategory: '',\n          todoList: [\n            {\n              todo: '',\n            },\n          ],\n          publicList: false,\n        },\n      ],\n    }));\n  };\n\n  const addTodo = categoryIndex => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.push({\n      todo: '',\n    });\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const deleteCategory = categoryIndex => {\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories.splice(categoryIndex, 1);\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const deleteTodo = (categoryIndex, todoIndex) => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.splice(todoIndex, 1);\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const handleCdnUrlsChange = urls => {\n    setCdnUrls(urls);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const token = localStorage.getItem('token');\n    const url = 'http://localhost:3000/api/trips';\n\n    const updatedData = {\n      ...data,\n      photos: cdnUrls,\n    };\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(updatedData),\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        setData(initialState);\n        localStorage.removeItem('data');\n        setCdnUrls([]);\n        window.location.reload();\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        {/* Title */}\n        <label htmlFor=\"title\">Назва</label>\n        <Input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={data.title}\n          onChange={handleChange}\n        />\n\n        {/* Description */}\n        <label htmlFor=\"description\">Опис</label>\n        <TextArea\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          value={data.description}\n          onChange={handleChange}\n        />\n\n        {/* Categories */}\n        <h4>Категорії</h4>\n        {data.categories.map((category, categoryIndex) => (\n          <CategoriesDiv key={categoryIndex}>\n            <label htmlFor={`category-${categoryIndex}`}>Назва категорії</label>\n            <TodoDiv>\n              <Input\n                type=\"text\"\n                id={`category-${categoryIndex}`}\n                name=\"nameCategory\"\n                value={category.nameCategory}\n                onChange={event => handleCategoryChange(event, categoryIndex)}\n              />\n\n              {/* Category Public */}\n              <PublicCheckboxDiv>\n                <label htmlFor={`category-public-${categoryIndex}`}>\n                  Публічна категорія?\n                </label>\n                <Checkbox\n                  type=\"checkbox\"\n                  id={`category-public-${categoryIndex}`}\n                  name=\"publicList\"\n                  checked={category.publicList}\n                  onChange={event =>\n                    handleCategoryPublicChange(event, categoryIndex)\n                  }\n                />\n              </PublicCheckboxDiv>\n            </TodoDiv>\n\n            {/* Todo List */}\n            <label>Нотатки</label>\n            {category.todoList.map((todo, todoIndex) => (\n              <div key={todoIndex}>\n                {/* <label htmlFor={`todo-${categoryIndex}-${todoIndex}`}>\n                  Todo\n                </label> */}\n                <TodoDiv>\n                  <Input\n                    type=\"text\"\n                    id={`todo-${categoryIndex}-${todoIndex}`}\n                    name=\"todo\"\n                    value={todo.todo}\n                    onChange={event =>\n                      handleTodoChange(event, categoryIndex, todoIndex)\n                    }\n                  />\n\n                  {/* Delete Todo */}\n                  <Button\n                    type=\"primary\"\n                    danger\n                    style={{ backgroundColor: '#ED5E68' }}\n                    onClick={() => deleteTodo(categoryIndex, todoIndex)}\n                  >\n                    Видалити нотатку\n                  </Button>\n                </TodoDiv>\n              </div>\n            ))}\n            <ChangeDiv>\n              {/* Add Todo */}\n              <Button\n                type=\"primary\"\n                style={{ backgroundColor: '#8DD3BB' }}\n                onClick={() => addTodo(categoryIndex)}\n              >\n                Додати нотатку\n              </Button>\n\n              {/* Delete Category */}\n              <Button\n                type=\"primary\"\n                style={{ backgroundColor: '#ED5E68' }}\n                danger\n                onClick={() => deleteCategory(categoryIndex)}\n              >\n                Видалити категорію\n              </Button>\n            </ChangeDiv>\n          </CategoriesDiv>\n        ))}\n\n        <BottomDiv>\n          {/* Add Category */}\n          <Button\n            type=\"primary\"\n            style={{ backgroundColor: '#8DD3BB' }}\n            onClick={addCategory}\n          >\n            Додати категорію\n          </Button>\n\n          {/* Public */}\n          <PublicCheckboxDiv>\n            <label htmlFor=\"isPublic\">Публачна мандрівка?</label>\n            <Checkbox\n              type=\"checkbox\"\n              id=\"isPublic\"\n              name=\"isPublic\"\n              checked={data.isPublic}\n              onChange={handlePublicChange}\n            />\n          </PublicCheckboxDiv>\n        </BottomDiv>\n\n        <AddPhotos onCdnUrlsChange={handleCdnUrlsChange} />\n\n        {/* Submit */}\n        <ButtonSend\n          style={{\n            marginTop: '10px',\n            color: '#8DD3BB',\n            borderColor: '#8DD3BB',\n          }}\n          variant=\"outlined\"\n          startIcon={<SendIcon />}\n          type=\"submit\"\n        >\n          Відправити\n        </ButtonSend>\n      </Form>\n    </>\n  );\n};\n\nexport default AddTripForm;\n","import styled from 'styled-components';\n\nexport const TripDescription = styled.p`\n  color: #666;\n  font-size: 14px;\n  margin-bottom: 16px;\n`;\n\nexport const Category = styled.h3`\n  margin-bottom: 6px;\n`;\n\nexport const CategoryName = styled.h4`\n  color: #555;\n  margin-bottom: 3px;\n`;\n\nexport const TodoList = styled.ul`\n  list-style-type: disc;\n  margin-bottom: 6px;\n  margin-left: 15px;\n`;\n\nexport const TodoItem = styled.li`\n  color: #777;\n`;\n\nexport const PhotoList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`;\n\nexport const Photo = styled.li`\n  width: 150px;\n`;\n","/* eslint-disable jsx-a11y/img-redundant-alt */\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Col, Row } from 'antd';\nimport {\n  TripDescription,\n  Category,\n  CategoryName,\n  TodoList,\n  TodoItem,\n  PhotoList,\n  Photo,\n} from './AllUserTrips.style';\n\nconst AllUserTrips = () => {\n  const [trips, setTrips] = useState([]);\n  const token = localStorage.getItem('token');\n\n  useEffect(() => {\n    fetch('http://localhost:3000/api/trips', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(response => response.json())\n      .then(data => setTrips(data))\n      .catch(error => console.error('Error fetching trips:', error));\n  }, [token]);\n\n   const getRandomColor = () => {\n     const letters = '0123456789ABCDEF';\n     let color = '#';\n     for (let i = 0; i < 6; i++) {\n       color += letters[Math.floor(Math.random() * 16)];\n     }\n     return color;\n   };\n\n  return (\n    <>\n      <Row gutter={16}>\n        {trips.map(trip => (\n          <Col span={8} key={trip._id}>\n            <Card\n              style={{ marginBottom: '15px' }}\n              title={trip.title}\n              bordered={false}\n              headStyle={{ backgroundColor: getRandomColor(), color: '#fafbfc' }}\n            >\n              <TripDescription>{trip.description}</TripDescription>\n              <Category>Категорії:</Category>\n              <ul>\n                {trip.categories.map((category, index) => (\n                  <li key={index}>\n                    <CategoryName>{category.nameCategory}</CategoryName>\n                    <TodoList>\n                      {category.todoList.map((todo, index) => (\n                        <TodoItem key={index}>{todo.todo}</TodoItem>\n                      ))}\n                    </TodoList>\n                  </li>\n                ))}\n              </ul>\n              <p>Публачна мандрівка: {trip.isPublic ? 'Так' : 'Ні'}</p>\n              {trip.photos.length > 0 && (\n                <div>\n                  <h3>Фотографії:</h3>\n                  <PhotoList>\n                    {trip.photos.map((photo, index) => (\n                      <Photo key={index}>\n                        <img src={photo.cdnUrl} alt={`Photo ${index + 1}`} />\n                      </Photo>\n                    ))}\n                  </PhotoList>\n                </div>\n              )}\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default AllUserTrips;\n","import styled from 'styled-components';\n\nexport const UpdateDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Form = styled.form`\n  min-width: 600px;\n  padding: 15px;\n  border: 1px solid #8dd3bb;\n  border-radius: 5px;\n  background-color: #fafafa;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  box-shadow: 0px 4px 16px 0px rgba(17, 34, 17, 0.05);\n`;\n\nexport const CategoriesDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n  border: 1px solid #8dd3bb;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  gap: 10px;\n`;\n\nexport const PublicCheckboxDiv = styled.div`\n  display: flex;\n  gap: 5px;\n`;\n\nexport const TodoDiv = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 7px;\n`;\n\nexport const ChangeDiv = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const BottomDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const ContainerImg = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  margin-top: 10px;\n`;","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { useState, useEffect } from 'react';\nimport {\n  deleteFile,\n  deleteFiles,\n  UploadcareSimpleAuthSchema,\n} from '@uploadcare/rest-client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Input, Checkbox, Button } from 'antd';\nimport ButtonSend from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\n\nimport AddPhotos from '../AddTripForm/AddPhotos/AddPhotos';\n\nimport {\n  UpdateDiv,\n  Form,\n  CategoriesDiv,\n  PublicCheckboxDiv,\n  TodoDiv,\n  ChangeDiv,\n  BottomDiv,\n  ContainerImg,\n} from './UpdateTrip.style';\n\nconst { TextArea } = Input;\n\nconst UpdateTrip = () => {\n  const initialState = {\n    title: '',\n    description: '',\n    categories: [\n      {\n        nameCategory: '',\n        todoList: [\n          {\n            todo: '',\n          },\n        ],\n        publicList: false,\n      },\n    ],\n    isPublic: false,\n    photos: [],\n  };\n\n  const [data, setData] = useState(initialState);\n  const [cdnUrls, setCdnUrls] = useState([]);\n  const [trips, setTrips] = useState([]);\n  const [selectedTripId, setSelectedTripId] = useState(null);\n  const [isTripSelected, setIsTripSelected] = useState(false);\n  const [uploadcareSimpleAuthSchema, setUploadcareSimpleAuthSchema] =\n    useState(null);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const url = 'http://localhost:3000/api/trips/keys';\n\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        setUploadcareSimpleAuthSchema(\n          new UploadcareSimpleAuthSchema({\n            publicKey: data.publicKey,\n            secretKey: data.secretKey,\n          })\n        );\n      })\n      .catch(error => {\n        console.error('Error fetching keys:', error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const savedData = JSON.parse(localStorage.getItem('data'));\n\n    if (savedData) {\n      setData(savedData);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data));\n  }, [data]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const url = 'http://localhost:3000/api/trips';\n\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        setTrips(responseData);\n      })\n      .catch(error => {\n        console.error('Error fetching trips:', error);\n      });\n  }, []);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleCategoryChange = (event, index) => {\n    const { name, value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[index] = {\n        ...newCategories[index],\n        [name]: value,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handleTodoChange = (event, categoryIndex, todoIndex) => {\n    const { value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      const newTodoList = [...newCategories[categoryIndex].todoList];\n      newTodoList[todoIndex] = {\n        todo: value,\n      };\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        todoList: newTodoList,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handlePublicChange = event => {\n    const { checked } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      isPublic: checked,\n    }));\n  };\n\n  const handleCategoryPublicChange = (event, categoryIndex) => {\n    const { checked } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        publicList: checked,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const addCategory = () => {\n    setData(prevData => ({\n      ...prevData,\n      categories: [\n        ...prevData.categories,\n        {\n          nameCategory: '',\n          todoList: [\n            {\n              todo: '',\n            },\n          ],\n          publicList: false,\n        },\n      ],\n    }));\n  };\n\n  const addTodo = categoryIndex => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.push({\n      todo: '',\n    });\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const deleteCategory = categoryIndex => {\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories.splice(categoryIndex, 1);\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const deleteTodo = (categoryIndex, todoIndex) => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.splice(todoIndex, 1);\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const handleCdnUrlsChange = urls => {\n    setCdnUrls(urls);\n  };\n\n  const handlePhotoDelete = index => {\n    const updatedPhotos = [...data.photos];\n    const deletedPhoto = updatedPhotos.splice(index, 1)[0];\n\n    deleteFile(\n      { uuid: deletedPhoto.uuid },\n      { authSchema: uploadcareSimpleAuthSchema }\n    );\n\n    setData(prevData => ({\n      ...prevData,\n      photos: updatedPhotos,\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const token = localStorage.getItem('token');\n    const url = `http://localhost:3000/api/trips/${selectedTripId}`;\n\n    const updatedPhotos = data.photos.map(photo => {\n      const cdnUrl = cdnUrls.find(url => url === photo.cdnUrl);\n      return cdnUrl\n        ? { cdnUrl, uuid: photo.uuid }\n        : { cdnUrl: photo.cdnUrl, uuid: photo.uuid };\n    });\n\n    cdnUrls.forEach(newPhoto => {\n      if (!data.photos.find(photo => photo.cdnUrl === newPhoto.cdnUrl)) {\n        updatedPhotos.push({ cdnUrl: newPhoto.cdnUrl, uuid: newPhoto.uuid });\n      }\n    });\n\n    const updatedData = {\n      ...data,\n      categories: data.categories.map(category => ({\n        nameCategory: category.nameCategory,\n        todoList: category.todoList.map(todo => ({\n          todo: todo.todo,\n        })),\n        publicList: category.publicList,\n      })),\n      photos: [...updatedPhotos],\n    };\n\n    fetch(url, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(updatedData),\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        toast.success('Мадрівка успішно оновлена!');\n        setData(initialState);\n        localStorage.removeItem('data');\n        setCdnUrls([]);\n        window.location.reload();\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        toast.error('Упс... Щось пішло не так!');\n      });\n  };\n\n  const handleTripSelect = tripId => {\n    const selectedTrip = trips.find(trip => trip._id === tripId);\n    setData({\n      title: selectedTrip.title,\n      description: selectedTrip.description,\n      categories: selectedTrip.categories.map(category => ({\n        nameCategory: category.nameCategory,\n        todoList: category.todoList.map(todo => ({\n          todo: todo.todo,\n        })),\n        publicList: category.publicList,\n      })),\n      isPublic: selectedTrip.isPublic,\n      photos: selectedTrip.photos.map(photo => ({\n        cdnUrl: photo.cdnUrl,\n        uuid: photo.uuid,\n      })),\n    });\n    setCdnUrls(selectedTrip.photos.map(photo => photo.cdnUrl));\n    setSelectedTripId(tripId);\n    setIsTripSelected(true);\n  };\n\n  const handleDeleteTrip = () => {\n    const token = localStorage.getItem('token');\n    const url = `http://localhost:3000/api/trips/${selectedTripId}`;\n\n    const photoUUIDs = data.photos.map(photo => photo.uuid);\n\n    fetch(url, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        toast.success('Мандрівка успішно видалена!');\n        setData(initialState);\n        localStorage.removeItem('data');\n        setCdnUrls([]);\n        setIsTripSelected(false);\n        setTrips(trips.filter(trip => trip._id !== selectedTripId));\n      })\n      .catch(error => {\n        console.error('Error deleting trip:', error);\n        toast.error('Упс... Щось пішло не так!');\n      });\n\n    if (photoUUIDs.length > 0) {\n      deleteFiles(\n        { uuids: photoUUIDs },\n        { authSchema: uploadcareSimpleAuthSchema }\n      );\n    }\n  };\n\n  return (\n    <>\n      <ToastContainer />\n      <h2>Обери мандрівку для внесення зміни</h2>\n      <UpdateDiv>\n        <ul>\n          {trips.map(trip => (\n            <li key={trip._id} onClick={() => handleTripSelect(trip._id)}>\n              {trip.title}\n            </li>\n          ))}\n        </ul>\n\n        {isTripSelected && (\n          <>\n            <Form onSubmit={handleSubmit}>\n              {/* Title */}\n              <label htmlFor=\"title\">Назва</label>\n              <Input\n                type=\"text\"\n                id=\"title\"\n                name=\"title\"\n                value={data.title}\n                onChange={handleChange}\n              />\n\n              {/* Description */}\n              <label htmlFor=\"description\">Опис</label>\n              <TextArea\n                type=\"text\"\n                id=\"description\"\n                name=\"description\"\n                value={data.description}\n                onChange={handleChange}\n              />\n\n              {/* Categories */}\n              <h4>Категорії</h4>\n              {data.categories.map((category, categoryIndex) => (\n                <CategoriesDiv key={categoryIndex}>\n                  <label htmlFor={`category-${categoryIndex}`}>\n                    Назва категорії\n                  </label>\n                  <TodoDiv>\n                    <Input\n                      type=\"text\"\n                      id={`category-${categoryIndex}`}\n                      name=\"nameCategory\"\n                      value={category.nameCategory}\n                      onChange={event =>\n                        handleCategoryChange(event, categoryIndex)\n                      }\n                    />\n\n                    {/* Category Public */}\n                    <PublicCheckboxDiv>\n                      <label htmlFor={`category-public-${categoryIndex}`}>\n                        Публічна категорія?\n                      </label>\n                      <Checkbox\n                        type=\"checkbox\"\n                        id={`category-public-${categoryIndex}`}\n                        name=\"publicList\"\n                        checked={category.publicList}\n                        onChange={event =>\n                          handleCategoryPublicChange(event, categoryIndex)\n                        }\n                      />\n                    </PublicCheckboxDiv>\n                  </TodoDiv>\n\n                  {/* Todo List */}\n                  <h3>Нотатки</h3>\n                  {category.todoList.map((todo, todoIndex) => (\n                    <TodoDiv key={todoIndex}>\n                      {/* <label htmlFor={`todo-${categoryIndex}-${todoIndex}`}>\n                      Todo\n                    </label> */}\n                      <Input\n                        type=\"text\"\n                        id={`todo-${categoryIndex}-${todoIndex}`}\n                        name=\"todo\"\n                        value={todo.todo}\n                        onChange={event =>\n                          handleTodoChange(event, categoryIndex, todoIndex)\n                        }\n                      />\n\n                      {/* Delete Todo */}\n                      <Button\n                        type=\"primary\"\n                        danger\n                        style={{ backgroundColor: '#ED5E68' }}\n                        onClick={() => deleteTodo(categoryIndex, todoIndex)}\n                      >\n                        Видалити нотатку\n                      </Button>\n                    </TodoDiv>\n                  ))}\n                  <ChangeDiv>\n                    {/* Add Todo */}\n                    <Button\n                      type=\"primary\"\n                      style={{ backgroundColor: '#8DD3BB' }}\n                      onClick={() => addTodo(categoryIndex)}\n                    >\n                      Додати нотатку\n                    </Button>\n\n                    {/* Delete Category */}\n                    <Button\n                      type=\"primary\"\n                      style={{ backgroundColor: '#ED5E68' }}\n                      danger\n                      onClick={() => deleteCategory(categoryIndex)}\n                    >\n                      Видалити категорію\n                    </Button>\n                  </ChangeDiv>\n                </CategoriesDiv>\n              ))}\n\n              <BottomDiv>\n                {/* Add Category */}\n                <Button\n                  type=\"primary\"\n                  style={{ backgroundColor: '#8DD3BB' }}\n                  onClick={addCategory}\n                >\n                  Додати категорію\n                </Button>\n\n                {/* Public */}\n                <PublicCheckboxDiv>\n                  <label htmlFor=\"isPublic\">Публачна мандрівка?</label>\n                  <Checkbox\n                    type=\"checkbox\"\n                    id=\"isPublic\"\n                    name=\"isPublic\"\n                    checked={data.isPublic}\n                    onChange={handlePublicChange}\n                  />\n                </PublicCheckboxDiv>\n              </BottomDiv>\n\n              <AddPhotos onCdnUrlsChange={handleCdnUrlsChange} />\n\n              <ContainerImg>\n                {data.photos.map((photo, index) => (\n                  <div key={index}>\n                    <img\n                      style={{ width: '150px' }}\n                      src={photo.cdnUrl}\n                      alt={`Trip photo ${index}`}\n                    />\n                    <Button\n                      type=\"primary\"\n                      style={{ backgroundColor: '#ED5E68' }}\n                      danger\n                      onClick={() => handlePhotoDelete(index)}\n                    >\n                      Видалити\n                    </Button>\n                  </div>\n                ))}\n              </ContainerImg>\n\n              {/* Submit */}\n              <ButtonSend\n                style={{\n                  marginTop: '10px',\n                  color: '#8DD3BB',\n                  borderColor: '#8DD3BB',\n                }}\n                variant=\"outlined\"\n                startIcon={<SendIcon />}\n                type=\"submit\"\n              >\n                Відправити\n              </ButtonSend>\n\n              {/* Delete Trip */}\n              <Button\n                type=\"primary\"\n                style={{ backgroundColor: '#ED5E68' }}\n                danger\n                onClick={handleDeleteTrip}\n              >\n                Видалити мандрівку\n              </Button>\n            </Form>\n          </>\n        )}\n      </UpdateDiv>\n    </>\n  );\n};\n\nexport default UpdateTrip;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1262px;\n  margin: 0 auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-top: 70px;\n`;","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport PropTypes from 'prop-types';\nimport AddTripForm from '../../components/UserSections/AddTripForm/AddTripForm';\nimport AllUserTrips from '../../components/UserSections/AllUserTrips/AllUserTrips';\nimport UpdateTrip from '../../components/UserSections/UpdateTrip/UpdateTrip';\n\nimport { Container } from './User.style';\n\nfunction CustomTabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nCustomTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst User = () => {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Container>\n      <Box sx={{ width: '100%' }}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"user tabs\"\n            centered\n          >\n            <Tab label=\"Дадавання мандрівки\" {...a11yProps(0)} />\n            <Tab label=\"Усі твої мандрівки\" {...a11yProps(1)} />\n            <Tab label=\"Редагування мандрівок\" {...a11yProps(2)} />\n          </Tabs>\n        </Box>\n        <CustomTabPanel value={value} index={0}>\n          <AddTripForm />\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={1}>\n          <AllUserTrips />\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={2}>\n          <UpdateTrip />\n        </CustomTabPanel>\n      </Box>\n    </Container>\n  );\n};\n\nexport default User;\n"],"names":["ContainerImg","styled","_templateObject","_taggedTemplateLiteral","LR","_ref","onCdnUrlsChange","_useState","useState","_useState2","_slicedToArray","files","setFiles","_useState3","_useState4","cdnUrls","setCdnUrls","ctxProviderRef","useRef","useEffect","ctxProvider","current","handleChangeEvent","event","newFiles","detail","allEntries","filter","file","status","prevCdnUrls","newUrls","map","cdnUrl","uuid","concat","_toConsumableArray","newUrl","some","url","addEventListener","removeEventListener","_jsxs","children","_jsx","pubkey","ref","style","width","src","alt","fileInfo","originalFilename","Form","CategoriesDiv","_templateObject2","PublicCheckboxDiv","_templateObject3","TodoDiv","_templateObject4","ChangeDiv","_templateObject5","BottomDiv","_templateObject6","TextArea","Input","initialState","title","description","categories","nameCategory","todoList","todo","publicList","isPublic","photos","data","setData","savedData","JSON","parse","localStorage","getItem","setItem","stringify","handleChange","_event$target","target","name","value","prevData","_objectSpread","_defineProperty","_Fragment","onSubmit","preventDefault","token","updatedData","fetch","method","headers","Authorization","body","then","response","json","responseData","removeItem","window","location","reload","catch","error","console","htmlFor","type","id","onChange","category","categoryIndex","index","_event$target2","newCategories","handleCategoryChange","Checkbox","checked","handleCategoryPublicChange","todoIndex","newTodoList","handleTodoChange","Button","danger","backgroundColor","onClick","updatedCategories","splice","deleteTodo","push","addTodo","deleteCategory","AddPhotos","urls","ButtonSend","marginTop","color","borderColor","variant","startIcon","SendIcon","TripDescription","Category","CategoryName","TodoList","TodoItem","PhotoList","Photo","_templateObject7","trips","setTrips","getRandomColor","i","Math","floor","random","Row","gutter","trip","Col","span","Card","marginBottom","bordered","headStyle","length","photo","_id","UpdateDiv","_templateObject8","_useState5","_useState6","_useState7","_useState8","selectedTripId","setSelectedTripId","_useState9","_useState10","isTripSelected","setIsTripSelected","_useState11","_useState12","uploadcareSimpleAuthSchema","setUploadcareSimpleAuthSchema","UploadcareSimpleAuthSchema","publicKey","secretKey","ToastContainer","tripId","selectedTrip","find","handleTripSelect","updatedPhotos","forEach","newPhoto","toast","deletedPhoto","deleteFile","authSchema","handlePhotoDelete","photoUUIDs","deleteFiles","uuids","Container","CustomTabPanel","props","other","_objectWithoutProperties","_excluded","role","hidden","Box","sx","p","a11yProps","_React$useState","React","_React$useState2","setValue","borderBottom","Tabs","newValue","centered","Tab","label","AddTripForm","AllUserTrips","UpdateTrip"],"sourceRoot":""}