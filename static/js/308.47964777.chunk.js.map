{"version":3,"file":"static/js/308.47964777.chunk.js","mappings":"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","sources":["components/PublicTripsSections/Modal/Modal.jsx","components/PublicTripsSections/AllPublicTrips.style.jsx","components/PublicTripsSections/AllPublicTrips.jsx","pages/PublicTrips/PublicTrips.style.jsx","pages/PublicTrips/PublicTrips.jsx"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, css } from '@mui/system';\nimport { Modal as BaseModal } from '@mui/base/Modal';\n\nexport default function ModalUnstyled({ open, onClose, photo }) {\n  return (\n    <Modal\n      aria-labelledby=\"unstyled-modal-title\"\n      aria-describedby=\"unstyled-modal-description\"\n      open={open}\n      onClose={onClose}\n      slots={{ backdrop: StyledBackdrop }}\n    >\n      <ModalContent sx={{ width: 400 }}>\n        <img src={photo} alt=\"Selected\" style={{ width: '100%' }} />\n      </ModalContent>\n    </Modal>\n  );\n}\n\nModalUnstyled.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  photo: PropTypes.string.isRequired,\n};\n\nconst Backdrop = React.forwardRef((props, ref) => {\n  const { open, className, ...other } = props;\n  return (\n    <div\n      className={clsx({ 'base-Backdrop-open': open }, className)}\n      ref={ref}\n      {...other}\n    />\n  );\n});\n\nBackdrop.propTypes = {\n  className: PropTypes.string.isRequired,\n  open: PropTypes.bool,\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst Modal = styled(BaseModal)`\n  position: fixed;\n  z-index: 1300;\n  inset: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n`;\n\nconst StyledBackdrop = styled(Backdrop)`\n  z-index: -1;\n  position: fixed;\n  inset: 0;\n  background-color: rgb(0 0 0 / 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst ModalContent = styled('div')(\n  ({ theme }) => css`\n    position: relative;\n    overflow: hidden;\n    background-color: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n    border: none;\n    padding: 24px;\n  `\n);\n","import styled from 'styled-components';\n\nexport const TripDescription = styled.p`\n  color: #666;\n  font-size: 14px;\n  margin-bottom: 16px;\n`;\n\nexport const Category = styled.h3`\n  margin-bottom: 6px;\n`;\n\nexport const CategoryName = styled.h4`\n  color: #555;\n  margin-bottom: 3px;\n`;\n\nexport const TodoList = styled.ul`\n  list-style-type: disc;\n  margin-bottom: 6px;\n  margin-left: 15px;\n`;\n\nexport const TodoItem = styled.li`\n  color: #777;\n`;\n\nexport const PhotoList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`;\n\nexport const Photo = styled.li`\n  width: 150px;\n`;\n","/* eslint-disable jsx-a11y/img-redundant-alt */\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, Col, Row, Input, Select } from 'antd';\nimport Modal from './Modal/Modal';\n\nimport {\n  TripDescription,\n  Category,\n  CategoryName,\n  TodoList,\n  TodoItem,\n  PhotoList,\n  Photo,\n} from './AllPublicTrips.style';\n\nconst { Option } = Select;\n\nconst AllPublicTrips = () => {\n  const [trips, setTrips] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [open, setOpen] = useState(false);\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n\n  useEffect(() => {\n    const fetchTrips = async () => {\n      try {\n        const response = await axios.get(\n          'http://localhost:3000/api/trips/allpublic'\n        );\n        setTrips(response.data.trips);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchTrips();\n  }, []);\n\n  const handleLike = async tripId => {\n    try {\n      await axios.patch(`http://localhost:3000/api/trips/${tripId}/likes`);\n    } catch (error) {\n      console.error('Error liking trip:', error);\n    }\n  };\n\n  const handleSearch = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleCategoryChange = value => {\n    setSelectedCategory(value);\n  };\n\n  const handlePhotoClick = photo => {\n    setSelectedPhoto(photo);\n    setOpen(true);\n  };\n\n  const filteredTrips = trips.filter(trip => {\n    const matchesSearchQuery = trip.title\n      .toLowerCase()\n      .includes(searchQuery.toLowerCase());\n    const matchesCategory = selectedCategory\n      ? trip.categories.some(\n          category => category.nameCategory === selectedCategory\n        )\n      : true;\n    return matchesSearchQuery && matchesCategory;\n  });\n\n  const uniqueCategories = [\n    ...new Set(\n      trips.flatMap(trip =>\n        trip.categories.map(category => category.nameCategory)\n      )\n    ),\n  ];\n\n  const getRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n\n  return (\n    <div>\n      <Input\n        placeholder=\"Search trips\"\n        value={searchQuery}\n        onChange={handleSearch}\n        style={{ marginBottom: '20px' }}\n      />\n      <Select\n        placeholder=\"Filter by category\"\n        style={{ width: '200px', marginBottom: '20px' }}\n        onChange={handleCategoryChange}\n        allowClear\n      >\n        {uniqueCategories.map(category => (\n          <Option key={category} value={category}>\n            {category}\n          </Option>\n        ))}\n      </Select>\n      <Row gutter={[16, 16]}>\n        {filteredTrips.map(trip => (\n          <Col span={8} key={trip._id}>\n            <Card\n              style={{ marginBottom: '15px' }}\n              title={trip.title}\n              bordered={false}\n              headStyle={{\n                backgroundColor: getRandomColor(),\n                color: '#fafbfc',\n              }}\n              actions={[\n                <button key=\"like\" onClick={() => handleLike(trip._id)}>\n                  Like\n                </button>,\n              ]}\n            >\n              <TripDescription>{trip.description}</TripDescription>\n              <Category>Categories:</Category>\n              {trip.categories\n                .filter(category => category.publicList)\n                .map(category => (\n                  <div key={category._id}>\n                    <CategoryName>{category.nameCategory}</CategoryName>\n                    <TodoList>\n                      {category.todoList.map(todo => (\n                        <TodoItem key={todo._id}>{todo.todo}</TodoItem>\n                      ))}\n                    </TodoList>\n                  </div>\n                ))}\n              <div>\n                <h3>Photos:</h3>\n                <PhotoList>\n                  {trip.photos.map((photo, index) => (\n                    <Photo key={index}>\n                      <img\n                        src={photo.cdnUrl}\n                        alt={`Photo ${index + 1}`}\n                        onClick={() => handlePhotoClick(photo.cdnUrl)}\n                        style={{\n                          cursor: 'pointer',\n                          boxShadow: '7px 11px 10px 1px rgba(223, 223, 223, 1)',\n                        }}\n                      />\n                    </Photo>\n                  ))}\n                </PhotoList>\n              </div>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n      {selectedPhoto && (\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          photo={selectedPhoto}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AllPublicTrips;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1262px;\n  margin: 0 auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-top: 70px;\n`;\n","import AllPublicTrips from '../../components/PublicTripsSections/AllPublicTrips';\n\nimport { Container } from './PublicTrips.style';\n\nconst PublicTrips = () => {\n  return (\n    <Container>\n      <AllPublicTrips></AllPublicTrips>\n    </Container>\n  );\n};\n\nexport default PublicTrips;\n"],"names":["ModalUnstyled","_ref","open","onClose","photo","_jsx","Modal","slots","backdrop","StyledBackdrop","children","ModalContent","sx","width","src","alt","style","Backdrop","React","props","ref","className","other","_objectWithoutProperties","_excluded","_objectSpread","clsx","grey","styled","BaseModal","_templateObject","_taggedTemplateLiteral","_templateObject2","_ref2","theme","css","_templateObject3","palette","mode","TripDescription","Category","CategoryName","TodoList","_templateObject4","TodoItem","_templateObject5","PhotoList","_templateObject6","Photo","_templateObject7","Option","Select","_useState","useState","_useState2","_slicedToArray","trips","setTrips","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","_useState6","selectedCategory","setSelectedCategory","_useState7","_useState8","setOpen","_useState9","_useState10","selectedPhoto","setSelectedPhoto","useEffect","fetchTrips","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","data","t0","console","log","stop","apply","arguments","handleLike","_callee2","tripId","_context2","concat","error","_x","filteredTrips","filter","trip","matchesSearchQuery","title","toLowerCase","includes","matchesCategory","categories","some","category","nameCategory","uniqueCategories","_toConsumableArray","Set","flatMap","map","getRandomColor","color","i","Math","floor","random","_jsxs","Input","placeholder","value","onChange","event","target","marginBottom","allowClear","Row","gutter","Col","span","Card","bordered","headStyle","backgroundColor","actions","onClick","_id","description","publicList","todoList","todo","photos","index","cdnUrl","handlePhotoClick","cursor","boxShadow","Container","AllPublicTrips"],"sourceRoot":""}