{"version":3,"file":"static/js/699.e37e0020.chunk.js","mappings":"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","sources":["components/UserSections/AddTripForm/AddPhotos/AddPhotos.jsx","components/UserSections/AddTripForm/AddTripForm.style.jsx","components/UserSections/AddTripForm/AddTripForm.jsx","components/UserSections/AllUserTrips/AllUserTrips.style.jsx","components/UserSections/AllUserTrips/AllUserTrips.jsx","components/UserSections/UpdateTrip/UpdateTrip.jsx","pages/User/User.style.jsx","pages/User/User.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as LR from '@uploadcare/blocks';\nimport '@uploadcare/blocks/web/lr-file-uploader-regular.min.css';\n\nLR.registerBlocks(LR);\n\nconst AddPhotos = ({ onCdnUrlsChange }) => {\n  const [files, setFiles] = useState([]);\n  const [cdnUrls, setCdnUrls] = useState([]);\n  const ctxProviderRef = useRef(null);\n\n  useEffect(() => {\n    const ctxProvider = ctxProviderRef.current;\n    if (!ctxProvider) return;\n\n    const handleChangeEvent = event => {\n      const newFiles = event.detail.allEntries.filter(\n        file => file.status === 'success'\n      );\n      setFiles(newFiles);\n      setCdnUrls(prevCdnUrls => {\n        const newUrls = newFiles.map(file => ({\n          cdnUrl: file.cdnUrl,\n          uuid: file.uuid,\n        }));\n        const uniqueUrls = [\n          ...prevCdnUrls,\n          ...newUrls.filter(\n            newUrl => !prevCdnUrls.some(url => url.cdnUrl === newUrl.cdnUrl)\n          ),\n        ];\n        return uniqueUrls;\n      });\n      // setCdnUrls(prevCdnUrls => {\n      //   const newUrls = newFiles.map(file => file.cdnUrl);\n      //   const uniqueUrls = Array.from(new Set([...prevCdnUrls, ...newUrls]));\n      //   return uniqueUrls;\n      // });\n    };\n\n    ctxProvider.addEventListener('change', handleChangeEvent);\n\n    return () => {\n      ctxProvider.removeEventListener('change', handleChangeEvent);\n    };\n  }, []);\n\n  useEffect(() => {\n    onCdnUrlsChange(cdnUrls);\n  }, [cdnUrls]);\n\n  return (\n    <div>\n      <lr-config ctx-name=\"my-uploader\" pubkey=\"274c6cf9681b13936265\" />\n\n      <lr-file-uploader-regular ctx-name=\"my-uploader\" />\n\n      <lr-upload-ctx-provider ctx-name=\"my-uploader\" ref={ctxProviderRef} />\n\n      <div>\n        {files.map(file => (\n          <div key={file.uuid}>\n            <img src={file.cdnUrl} alt={file.fileInfo.originalFilename} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AddPhotos;\n\n// import React, { useEffect, useRef, useState } from 'react';\n// import * as LR from '@uploadcare/blocks';\n// import '@uploadcare/blocks/web/lr-file-uploader-regular.min.css';\n\n// LR.registerBlocks(LR);\n\n// const UploadComponent = () => {\n//   const [files, setFiles] = useState([]);\n//   const ctxProviderRef = useRef(null);\n\n//   useEffect(() => {\n//     const ctxProvider = ctxProviderRef.current;\n//     if (!ctxProvider) return;\n\n//     const handleChangeEvent = event => {\n//       setFiles([\n//         ...event.detail.allEntries.filter(file => file.status === 'success'),\n//       ]);\n//     };\n\n//     ctxProvider.addEventListener('change', handleChangeEvent);\n\n//     return () => {\n//       ctxProvider.removeEventListener('change', handleChangeEvent);\n//     };\n//   }, [setFiles]);\n\n//   return (\n//     <div>\n//       <lr-config ctx-name=\"my-uploader\" pubkey=\"274c6cf9681b13936265\" />\n\n//       <lr-file-uploader-regular ctx-name=\"my-uploader\" />\n\n//       <lr-upload-ctx-provider ctx-name=\"my-uploader\" ref={ctxProviderRef} />\n\n//       <div>\n//         {files.map(file => (\n//           <div key={file.uuid}>\n//             <img src={file.cdnUrl} alt={file.fileInfo.originalFilename} />\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UploadComponent;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  max-width: 600px;\n  padding: 15px;\n  border: 1px solid #8dd3bb;\n  border-radius: 5px;\n  background-color: #fafafa;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  box-shadow: 0px 4px 16px 0px rgba(17, 34, 17, 0.05);\n`;\n\nexport const CategoriesDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n  border: 1px solid #8dd3bb;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  gap: 10px;\n`;\n\nexport const PublicCheckboxDiv = styled.div`\n  display: flex;\n  gap: 5px;\n`;\n\nexport const TodoDiv = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 7px;\n`;\n\nexport const ChangeDiv = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const BottomDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\n// export const FormWrapper = styled.div`\n//   max-width: 600px;\n//   margin: 0 auto;\n// `;\n\n// // Form Title\n// export const FormTitle = styled.h1`\n//   text-align: center;\n//   margin-bottom: 20px;\n//   color: #333;\n// `;\n\n// // Form Element\n// export const FormElement = styled.form`\n//   display: flex;\n//   flex-direction: column;\n// `;\n\n// // Label\n// export const Label = styled.label`\n//   margin-bottom: 5px;\n//   font-weight: bold;\n//   color: #555;\n// `;\n\n// // Input\n// export const Input = styled.input`\n//   padding: 10px;\n//   margin-bottom: 15px;\n//   border: 1px solid #ccc;\n//   border-radius: 4px;\n//   font-size: 16px;\n// `;\n\n// // Checkbox\n// export const Checkbox = styled.input.attrs({ type: 'checkbox' })`\n//   margin-right: 10px;\n// `;\n\n// // Button\n// export const Button = styled.button`\n//   padding: 10px 15px;\n//   margin-top: 10px;\n//   border: none;\n//   border-radius: 4px;\n//   background-color: #007bff;\n//   color: #fff;\n//   font-size: 16px;\n//   cursor: pointer;\n\n//   &:hover {\n//     background-color: #0056b3;\n//   }\n// `;\n\n// // Category Container\n// export const CategoryContainer = styled.div`\n//   margin-bottom: 20px;\n//   padding: 15px;\n//   background-color: #fff;\n//   border: 1px solid #e0e0e0;\n//   border-radius: 8px;\n// `;\n\n// // Todo Container\n// export const TodoContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   margin-bottom: 10px;\n// `;\n\n// // Todo Input\n// export const TodoInput = styled(Input)`\n//   margin-bottom: 5px;\n// `;\n\n// // Add/Delete Buttons\n// export const SmallButton = styled(Button)`\n//   padding: 5px 10px;\n//   font-size: 14px;\n//   margin-top: 5px;\n//   margin-right: 5px;\n//   background-color: #28a745;\n\n//   &:hover {\n//     background-color: #218838;\n//   }\n\n//   &:nth-of-type(2) {\n//     background-color: #dc3545;\n\n//     &:hover {\n//       background-color: #c82333;\n//     }\n//   }\n// `;\n","import { useState, useEffect } from 'react';\nimport AddPhotos from './AddPhotos/AddPhotos';\nimport { Input, Checkbox, Button } from 'antd';\nimport ButtonSend from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\n\nimport {\n  Form,\n  CategoriesDiv,\n  PublicCheckboxDiv,\n  TodoDiv,\n  ChangeDiv,\n  BottomDiv,\n} from './AddTripForm.style';\n\nconst { TextArea } = Input;\n\nconst AddTripForm = () => {\n  const initialState = {\n    title: '',\n    description: '',\n    categories: [\n      {\n        nameCategory: '',\n        todoList: [\n          {\n            todo: '',\n          },\n        ],\n        publicList: false,\n      },\n    ],\n    isPublic: false,\n    photos: [],\n  };\n\n  const [data, setData] = useState(initialState);\n  const [cdnUrls, setCdnUrls] = useState([]);\n\n  useEffect(() => {\n    const savedData = JSON.parse(localStorage.getItem('data'));\n\n    if (savedData) {\n      setData(savedData);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data));\n  }, [data]);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleCategoryChange = (event, index) => {\n    const { name, value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[index] = {\n        ...newCategories[index],\n        [name]: value,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handleTodoChange = (event, categoryIndex, todoIndex) => {\n    const { value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      const newTodoList = [...newCategories[categoryIndex].todoList];\n      newTodoList[todoIndex] = {\n        todo: value,\n      };\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        todoList: newTodoList,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handlePublicChange = event => {\n    const { checked } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      isPublic: checked,\n    }));\n  };\n\n  const handleCategoryPublicChange = (event, categoryIndex) => {\n    const { checked } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        publicList: checked,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const addCategory = () => {\n    setData(prevData => ({\n      ...prevData,\n      categories: [\n        ...prevData.categories,\n        {\n          nameCategory: '',\n          todoList: [\n            {\n              todo: '',\n            },\n          ],\n          publicList: false,\n        },\n      ],\n    }));\n  };\n\n  const addTodo = categoryIndex => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.push({\n      todo: '',\n    });\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const deleteCategory = categoryIndex => {\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories.splice(categoryIndex, 1);\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const deleteTodo = (categoryIndex, todoIndex) => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.splice(todoIndex, 1);\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const handleCdnUrlsChange = urls => {\n    setCdnUrls(urls);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const token = localStorage.getItem('token');\n    const url = 'http://localhost:3000/api/trips';\n\n    const updatedData = {\n      ...data,\n      photos: cdnUrls,\n    };\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(updatedData),\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        console.log('Response:', responseData);\n        setData(initialState);\n        localStorage.removeItem('data');\n        setCdnUrls([]);\n        window.location.reload();\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <>\n      <h1>Form</h1>\n      <Form onSubmit={handleSubmit}>\n        {/* Title */}\n        <label htmlFor=\"title\">Title</label>\n        <Input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={data.title}\n          onChange={handleChange}\n        />\n\n        {/* Description */}\n        <label htmlFor=\"description\">Description</label>\n        <TextArea\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          value={data.description}\n          onChange={handleChange}\n        />\n\n        {/* Categories */}\n        <h4>Categories</h4>\n        {data.categories.map((category, categoryIndex) => (\n          <CategoriesDiv key={categoryIndex}>\n            <label htmlFor={`category-${categoryIndex}`}>Category Name</label>\n            <TodoDiv>\n              <Input\n                type=\"text\"\n                id={`category-${categoryIndex}`}\n                name=\"nameCategory\"\n                value={category.nameCategory}\n                onChange={event => handleCategoryChange(event, categoryIndex)}\n              />\n\n              {/* Category Public */}\n              <PublicCheckboxDiv>\n                <label htmlFor={`category-public-${categoryIndex}`}>\n                  Public\n                </label>\n                <Checkbox\n                  type=\"checkbox\"\n                  id={`category-public-${categoryIndex}`}\n                  name=\"publicList\"\n                  checked={category.publicList}\n                  onChange={event =>\n                    handleCategoryPublicChange(event, categoryIndex)\n                  }\n                />\n              </PublicCheckboxDiv>\n            </TodoDiv>\n\n            {/* Todo List */}\n            <label>Todo List</label>\n            {category.todoList.map((todo, todoIndex) => (\n              <div key={todoIndex}>\n                {/* <label htmlFor={`todo-${categoryIndex}-${todoIndex}`}>\n                  Todo\n                </label> */}\n                <TodoDiv>\n                  <Input\n                    type=\"text\"\n                    id={`todo-${categoryIndex}-${todoIndex}`}\n                    name=\"todo\"\n                    value={todo.todo}\n                    onChange={event =>\n                      handleTodoChange(event, categoryIndex, todoIndex)\n                    }\n                  />\n\n                  {/* Delete Todo */}\n                  <Button\n                    type=\"primary\"\n                    danger\n                    style={{ backgroundColor: '#ED5E68' }}\n                    onClick={() => deleteTodo(categoryIndex, todoIndex)}\n                  >\n                    Delete Todo\n                  </Button>\n                </TodoDiv>\n              </div>\n            ))}\n            <ChangeDiv>\n              {/* Add Todo */}\n              <Button\n                type=\"primary\"\n                style={{ backgroundColor: '#8DD3BB' }}\n                onClick={() => addTodo(categoryIndex)}\n              >\n                Add Todo\n              </Button>\n\n              {/* Delete Category */}\n              <Button\n                type=\"primary\"\n                style={{ backgroundColor: '#ED5E68' }}\n                danger\n                onClick={() => deleteCategory(categoryIndex)}\n              >\n                Delete Category\n              </Button>\n            </ChangeDiv>\n          </CategoriesDiv>\n        ))}\n\n        <BottomDiv>\n          {/* Add Category */}\n          <Button\n            type=\"primary\"\n            style={{ backgroundColor: '#8DD3BB' }}\n            onClick={addCategory}\n          >\n            Add Category\n          </Button>\n\n          {/* Public */}\n          <PublicCheckboxDiv>\n            <label htmlFor=\"isPublic\">Public trip</label>\n            <Checkbox\n              type=\"checkbox\"\n              id=\"isPublic\"\n              name=\"isPublic\"\n              checked={data.isPublic}\n              onChange={handlePublicChange}\n            />\n          </PublicCheckboxDiv>\n        </BottomDiv>\n\n        <AddPhotos onCdnUrlsChange={handleCdnUrlsChange} />\n\n        {/* Submit */}\n        <ButtonSend\n          style={{\n            marginTop: '10px',\n            color: '#8DD3BB',\n            borderColor: '#8DD3BB',\n          }}\n          variant=\"outlined\"\n          startIcon={<SendIcon />}\n          type=\"submit\"\n        >\n          Submit\n        </ButtonSend>\n      </Form>\n    </>\n  );\n};\n\nexport default AddTripForm;\n","import styled from 'styled-components';\n\nexport const TripDescription = styled.p`\n  color: #666;\n  font-size: 14px;\n  margin-bottom: 16px;\n`;\n\nexport const Category = styled.h3`\n  margin-bottom: 6px;\n`;\n\nexport const CategoryName = styled.h4`\n  color: #555;\n  margin-bottom: 3px;\n`;\n\nexport const TodoList = styled.ul`\n  list-style-type: disc;\n  margin-bottom: 6px;\n  margin-left: 15px;\n`;\n\nexport const TodoItem = styled.li`\n  color: #777;\n`;\n\nexport const PhotoList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`;\n\nexport const Photo = styled.li`\n  width: 150px;\n`;\n","/* eslint-disable jsx-a11y/img-redundant-alt */\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Col, Row } from 'antd';\nimport {\n  TripDescription,\n  Category,\n  CategoryName,\n  TodoList,\n  TodoItem,\n  PhotoList,\n  Photo,\n} from './AllUserTrips.style';\n\nconst AllUserTrips = () => {\n  const [trips, setTrips] = useState([]);\n  const token = localStorage.getItem('token');\n\n  useEffect(() => {\n    fetch('http://localhost:3000/api/trips', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(response => response.json())\n      .then(data => setTrips(data))\n      .catch(error => console.error('Error fetching trips:', error));\n  }, [token]);\n\n  return (\n    <>\n      <Row gutter={16}>\n        {trips.map(trip => (\n          <Col span={8} key={trip._id}>\n            <Card\n              style={{ marginBottom: '15px' }}\n              title={trip.title}\n              bordered={false}\n              headStyle={{ backgroundColor: '#8DD3BB', color: '#fafbfc' }}\n            >\n              <TripDescription>{trip.description}</TripDescription>\n              <Category>Categories:</Category>\n              <ul>\n                {trip.categories.map((category, index) => (\n                  <li key={index}>\n                    <CategoryName>{category.nameCategory}</CategoryName>\n                    <TodoList>\n                      {category.todoList.map((todo, index) => (\n                        <TodoItem key={index}>{todo.todo}</TodoItem>\n                      ))}\n                    </TodoList>\n                  </li>\n                ))}\n              </ul>\n              <p>Public: {trip.isPublic ? 'Yes' : 'No'}</p>\n              {trip.photos.length > 0 && (\n                <div>\n                  <h3>Photos:</h3>\n                  <PhotoList>\n                    {trip.photos.map((photo, index) => (\n                      <Photo key={index}>\n                        <img src={photo.cdnUrl} alt={`Photo ${index + 1}`} />\n                      </Photo>\n                    ))}\n                  </PhotoList>\n                </div>\n              )}\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default AllUserTrips;\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { useState, useEffect } from 'react';\nimport {\n  deleteFile,\n  deleteFiles,\n  UploadcareSimpleAuthSchema,\n} from '@uploadcare/rest-client';\n\nimport AddPhotos from '../AddTripForm/AddPhotos/AddPhotos';\n\nconst UpdateTrip = () => {\n  const initialState = {\n    title: '',\n    description: '',\n    categories: [\n      {\n        nameCategory: '',\n        todoList: [\n          {\n            todo: '',\n          },\n        ],\n        publicList: false,\n      },\n    ],\n    isPublic: false,\n    photos: [],\n  };\n\n  const [data, setData] = useState(initialState);\n  const [cdnUrls, setCdnUrls] = useState([]);\n  const [trips, setTrips] = useState([]);\n  const [selectedTripId, setSelectedTripId] = useState(null);\n  const [isTripSelected, setIsTripSelected] = useState(false);\n  const [uploadcareSimpleAuthSchema, setUploadcareSimpleAuthSchema] =\n    useState(null);\n\n  // const uploadcareSimpleAuthSchema = new UploadcareSimpleAuthSchema({\n  //   publicKey: \"274c6cf9681b13936265\",\n  //   secretKey: \"9cfba5a3ce13072e7ac2\",\n  // });\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const url = 'http://localhost:3000/api/trips/keys';\n\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        setUploadcareSimpleAuthSchema(\n          new UploadcareSimpleAuthSchema({\n            publicKey: data.publicKey,\n            secretKey: data.secretKey,\n          })\n        );\n      })\n      .catch(error => {\n        console.error('Error fetching keys:', error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const savedData = JSON.parse(localStorage.getItem('data'));\n\n    if (savedData) {\n      setData(savedData);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data));\n  }, [data]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const url = 'http://localhost:3000/api/trips';\n\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        setTrips(responseData);\n      })\n      .catch(error => {\n        console.error('Error fetching trips:', error);\n      });\n  }, []);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleCategoryChange = (event, index) => {\n    const { name, value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[index] = {\n        ...newCategories[index],\n        [name]: value,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handleTodoChange = (event, categoryIndex, todoIndex) => {\n    const { value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      const newTodoList = [...newCategories[categoryIndex].todoList];\n      newTodoList[todoIndex] = {\n        todo: value,\n      };\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        todoList: newTodoList,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handlePublicChange = event => {\n    const { checked } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      isPublic: checked,\n    }));\n  };\n\n  const handleCategoryPublicChange = (event, categoryIndex) => {\n    const { checked } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        publicList: checked,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const addCategory = () => {\n    setData(prevData => ({\n      ...prevData,\n      categories: [\n        ...prevData.categories,\n        {\n          nameCategory: '',\n          todoList: [\n            {\n              todo: '',\n            },\n          ],\n          publicList: false,\n        },\n      ],\n    }));\n  };\n\n  const addTodo = categoryIndex => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.push({\n      todo: '',\n    });\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const deleteCategory = categoryIndex => {\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories.splice(categoryIndex, 1);\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const deleteTodo = (categoryIndex, todoIndex) => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.splice(todoIndex, 1);\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const handleCdnUrlsChange = urls => {\n    setCdnUrls(urls);\n  };\n\n  // const handlePhotoDelete = index => {\n  //   const updatedPhotos = [...data.photos];\n  //   updatedPhotos.splice(index, 1);\n  //   setData(prevData => ({\n  //     ...prevData,\n  //     photos: updatedPhotos,\n  //   }));\n  // };\n  const handlePhotoDelete = index => {\n    const updatedPhotos = [...data.photos];\n    const deletedPhoto = updatedPhotos.splice(index, 1)[0];\n\n    // Видалення фото з Uploadcare за його UUID\n    deleteFile(\n      { uuid: deletedPhoto.uuid },\n      { authSchema: uploadcareSimpleAuthSchema }\n    )\n      .then(() => {\n        console.log('Photo successfully deleted from Uploadcare');\n      })\n      .catch(error => {\n        console.error('Error deleting photo from Uploadcare:', error);\n      });\n\n    setData(prevData => ({\n      ...prevData,\n      photos: updatedPhotos,\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const token = localStorage.getItem('token');\n    const url = `http://localhost:3000/api/trips/${selectedTripId}`;\n\n    const updatedPhotos = data.photos.map(photo => {\n      const cdnUrl = cdnUrls.find(url => url === photo.cdnUrl);\n      return cdnUrl\n        ? { cdnUrl, uuid: photo.uuid }\n        : { cdnUrl: photo.cdnUrl, uuid: photo.uuid };\n    });\n\n    cdnUrls.forEach(newPhoto => {\n      if (!data.photos.find(photo => photo.cdnUrl === newPhoto.cdnUrl)) {\n        updatedPhotos.push({ cdnUrl: newPhoto.cdnUrl, uuid: newPhoto.uuid });\n      }\n    });\n\n    const updatedData = {\n      ...data,\n      categories: data.categories.map(category => ({\n        nameCategory: category.nameCategory,\n        todoList: category.todoList.map(todo => ({\n          todo: todo.todo,\n        })),\n        publicList: category.publicList,\n      })),\n      photos: [...updatedPhotos],\n    };\n\n    fetch(url, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(updatedData),\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        console.log('Response:', responseData);\n        setData(initialState);\n        localStorage.removeItem('data');\n        setCdnUrls([]);\n        // window.location.reload();\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  const handleTripSelect = tripId => {\n    const selectedTrip = trips.find(trip => trip._id === tripId);\n    setData({\n      title: selectedTrip.title,\n      description: selectedTrip.description,\n      categories: selectedTrip.categories.map(category => ({\n        nameCategory: category.nameCategory,\n        todoList: category.todoList.map(todo => ({\n          todo: todo.todo,\n        })),\n        publicList: category.publicList,\n      })),\n      isPublic: selectedTrip.isPublic,\n      photos: selectedTrip.photos.map(photo => ({\n        cdnUrl: photo.cdnUrl,\n        uuid: photo.uuid,\n      })),\n    });\n    setCdnUrls(selectedTrip.photos.map(photo => photo.cdnUrl));\n    setSelectedTripId(tripId);\n    setIsTripSelected(true);\n  };\n\n  const handleDeleteTrip = () => {\n    const token = localStorage.getItem('token');\n    const url = `http://localhost:3000/api/trips/${selectedTripId}`;\n\n    const photoUUIDs = data.photos.map(photo => photo.uuid);\n\n    fetch(url, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        console.log('Trip deleted:', responseData);\n        setData(initialState);\n        localStorage.removeItem('data');\n        setCdnUrls([]);\n        setIsTripSelected(false);\n        setTrips(trips.filter(trip => trip._id !== selectedTripId));\n      })\n      .catch(error => {\n        console.error('Error deleting trip:', error);\n      });\n\n    if (photoUUIDs.length > 0) {\n      deleteFiles(\n        { uuids: photoUUIDs },\n        { authSchema: uploadcareSimpleAuthSchema }\n      )\n        .then(() => {\n          console.log(\n            `Photos successfully deleted from Uploadcare: ${photoUUIDs.join(\n              ', '\n            )}`\n          );\n        })\n        .catch(error => {\n          console.error('Error deleting photos from Uploadcare:', error);\n        });\n    }\n  };\n\n  return (\n    <>\n      <h1>Form</h1>\n\n      <h2>Select Trip to Edit</h2>\n      <ul>\n        {trips.map(trip => (\n          <li key={trip._id} onClick={() => handleTripSelect(trip._id)}>\n            {trip.title}\n          </li>\n        ))}\n      </ul>\n\n      {isTripSelected && (\n        <>\n          <form onSubmit={handleSubmit}>\n            {/* Title */}\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              value={data.title}\n              onChange={handleChange}\n            />\n\n            {/* Description */}\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              type=\"text\"\n              id=\"description\"\n              name=\"description\"\n              value={data.description}\n              onChange={handleChange}\n            />\n\n            {/* Categories */}\n            <h2>Categories</h2>\n            {data.categories.map((category, categoryIndex) => (\n              <div key={categoryIndex}>\n                <label htmlFor={`category-${categoryIndex}`}>\n                  Category Name\n                </label>\n                <input\n                  type=\"text\"\n                  id={`category-${categoryIndex}`}\n                  name=\"nameCategory\"\n                  value={category.nameCategory}\n                  onChange={event => handleCategoryChange(event, categoryIndex)}\n                />\n\n                {/* Category Public */}\n                <label htmlFor={`category-public-${categoryIndex}`}>\n                  Public\n                </label>\n                <input\n                  type=\"checkbox\"\n                  id={`category-public-${categoryIndex}`}\n                  name=\"publicList\"\n                  checked={category.publicList}\n                  onChange={event =>\n                    handleCategoryPublicChange(event, categoryIndex)\n                  }\n                />\n\n                {/* Todo List */}\n                <h3>Todo List</h3>\n                {category.todoList.map((todo, todoIndex) => (\n                  <div key={todoIndex}>\n                    <label htmlFor={`todo-${categoryIndex}-${todoIndex}`}>\n                      Todo\n                    </label>\n                    <input\n                      type=\"text\"\n                      id={`todo-${categoryIndex}-${todoIndex}`}\n                      name=\"todo\"\n                      value={todo.todo}\n                      onChange={event =>\n                        handleTodoChange(event, categoryIndex, todoIndex)\n                      }\n                    />\n\n                    {/* Delete Todo */}\n                    <button\n                      type=\"button\"\n                      onClick={() => deleteTodo(categoryIndex, todoIndex)}\n                    >\n                      Delete Todo\n                    </button>\n                  </div>\n                ))}\n\n                {/* Add Todo */}\n                <button type=\"button\" onClick={() => addTodo(categoryIndex)}>\n                  Add Todo\n                </button>\n\n                {/* Delete Category */}\n                <button\n                  type=\"button\"\n                  onClick={() => deleteCategory(categoryIndex)}\n                >\n                  Delete Category\n                </button>\n              </div>\n            ))}\n\n            {/* Add Category */}\n            <button type=\"button\" onClick={addCategory}>\n              Add Category\n            </button>\n\n            {/* Public */}\n            <label htmlFor=\"isPublic\">Public</label>\n            <input\n              type=\"checkbox\"\n              id=\"isPublic\"\n              name=\"isPublic\"\n              checked={data.isPublic}\n              onChange={handlePublicChange}\n            />\n\n            <ul>\n              {data.photos.map((photo, index) => (\n                <li key={index}>\n                  <img src={photo.cdnUrl} alt={`Trip photo ${index}`} />\n                  <button onClick={() => handlePhotoDelete(index)}>\n                    Delete\n                  </button>\n                </li>\n              ))}\n            </ul>\n\n            <AddPhotos onCdnUrlsChange={handleCdnUrlsChange} />\n\n            {/* Submit */}\n            <button type=\"submit\">Submit</button>\n          </form>\n\n          {/* Delete Trip */}\n          <button type=\"button\" onClick={handleDeleteTrip}>\n            Delete Trip\n          </button>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default UpdateTrip;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1262px;\n  margin: 0 auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-top: 70px;\n`;","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport PropTypes from 'prop-types';\nimport AddTripForm from '../../components/UserSections/AddTripForm/AddTripForm';\nimport AllUserTrips from '../../components/UserSections/AllUserTrips/AllUserTrips';\nimport UpdateTrip from '../../components/UserSections/UpdateTrip/UpdateTrip';\n\nimport { Container } from './User.style';\n\nfunction CustomTabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nCustomTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst User = () => {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Container>\n      <Box sx={{ width: '100%' }}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"user tabs\"\n            centered\n          >\n            <Tab label=\"Add Trip\" {...a11yProps(0)} />\n            <Tab label=\"All Trips\" {...a11yProps(1)} />\n            <Tab label=\"Update Trip\" {...a11yProps(2)} />\n          </Tabs>\n        </Box>\n        <CustomTabPanel value={value} index={0}>\n          <AddTripForm />\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={1}>\n          <AllUserTrips />\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={2}>\n          <UpdateTrip />\n        </CustomTabPanel>\n      </Box>\n    </Container>\n  );\n};\n\nexport default User;\n"],"names":["LR","_ref","onCdnUrlsChange","_useState","useState","_useState2","_slicedToArray","files","setFiles","_useState3","_useState4","cdnUrls","setCdnUrls","ctxProviderRef","useRef","useEffect","ctxProvider","current","handleChangeEvent","event","newFiles","detail","allEntries","filter","file","status","prevCdnUrls","newUrls","map","cdnUrl","uuid","concat","_toConsumableArray","newUrl","some","url","addEventListener","removeEventListener","_jsxs","children","_jsx","pubkey","ref","src","alt","fileInfo","originalFilename","Form","styled","_templateObject","_taggedTemplateLiteral","CategoriesDiv","_templateObject2","PublicCheckboxDiv","_templateObject3","TodoDiv","_templateObject4","ChangeDiv","_templateObject5","BottomDiv","_templateObject6","TextArea","Input","initialState","title","description","categories","nameCategory","todoList","todo","publicList","isPublic","photos","data","setData","savedData","JSON","parse","localStorage","getItem","setItem","stringify","handleChange","_event$target","target","name","value","prevData","_objectSpread","_defineProperty","_Fragment","onSubmit","preventDefault","token","updatedData","fetch","method","headers","Authorization","body","then","response","json","responseData","console","log","removeItem","window","location","reload","catch","error","htmlFor","type","id","onChange","category","categoryIndex","index","_event$target2","newCategories","handleCategoryChange","Checkbox","checked","handleCategoryPublicChange","todoIndex","newTodoList","handleTodoChange","Button","danger","style","backgroundColor","onClick","updatedCategories","splice","deleteTodo","push","addTodo","deleteCategory","AddPhotos","urls","ButtonSend","marginTop","color","borderColor","variant","startIcon","SendIcon","TripDescription","Category","CategoryName","TodoList","TodoItem","PhotoList","Photo","_templateObject7","trips","setTrips","Row","gutter","trip","Col","span","Card","marginBottom","bordered","headStyle","length","photo","_id","_useState5","_useState6","_useState7","_useState8","selectedTripId","setSelectedTripId","_useState9","_useState10","isTripSelected","setIsTripSelected","_useState11","_useState12","uploadcareSimpleAuthSchema","setUploadcareSimpleAuthSchema","UploadcareSimpleAuthSchema","publicKey","secretKey","tripId","selectedTrip","find","handleTripSelect","updatedPhotos","forEach","newPhoto","deletedPhoto","deleteFile","authSchema","handlePhotoDelete","photoUUIDs","deleteFiles","uuids","join","Container","CustomTabPanel","props","other","_objectWithoutProperties","_excluded","role","hidden","Box","sx","p","a11yProps","_React$useState","React","_React$useState2","setValue","width","borderBottom","Tabs","newValue","centered","Tab","label","AddTripForm","AllUserTrips","UpdateTrip"],"sourceRoot":""}