{"version":3,"file":"static/js/591.ebf5f690.chunk.js","mappings":"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","sources":["components/PublicTripsSections/Modal/Modal.jsx","components/PopularTripsSections/AllPopularTrips.style.jsx","components/PopularTripsSections/AllPopularTrips.jsx","pages/PopularTrips/PopularTrips.style.jsx","pages/PopularTrips/PopularTrips.jsx"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, css } from '@mui/system';\nimport { Modal as BaseModal } from '@mui/base/Modal';\n\nexport default function ModalUnstyled({ open, onClose, photo }) {\n  return (\n    <Modal\n      aria-labelledby=\"unstyled-modal-title\"\n      aria-describedby=\"unstyled-modal-description\"\n      open={open}\n      onClose={onClose}\n      slots={{ backdrop: StyledBackdrop }}\n    >\n      <ModalContent sx={{ width: 400 }}>\n        <img src={photo} alt=\"Selected\" style={{ width: '100%' }} />\n      </ModalContent>\n    </Modal>\n  );\n}\n\nModalUnstyled.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  photo: PropTypes.string.isRequired,\n};\n\nconst Backdrop = React.forwardRef((props, ref) => {\n  const { open, className, ...other } = props;\n  return (\n    <div\n      className={clsx({ 'base-Backdrop-open': open }, className)}\n      ref={ref}\n      {...other}\n    />\n  );\n});\n\nBackdrop.propTypes = {\n  className: PropTypes.string.isRequired,\n  open: PropTypes.bool,\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E5EAF2',\n  200: '#DAE2ED',\n  300: '#C7D0DD',\n  400: '#B0B8C4',\n  500: '#9DA8B7',\n  600: '#6B7A90',\n  700: '#434D5B',\n  800: '#303740',\n  900: '#1C2025',\n};\n\nconst Modal = styled(BaseModal)`\n  position: fixed;\n  z-index: 1300;\n  inset: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n`;\n\nconst StyledBackdrop = styled(Backdrop)`\n  z-index: -1;\n  position: fixed;\n  inset: 0;\n  background-color: rgb(0 0 0 / 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst ModalContent = styled('div')(\n  ({ theme }) => css`\n    position: relative;\n    overflow: hidden;\n    background-color: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n    border: none;\n    padding: 24px;\n  `\n);\n","import styled from 'styled-components';\n\nexport const TripDescription = styled.p`\n  color: #666;\n  font-size: 14px;\n  margin-bottom: 16px;\n`;\n\nexport const Category = styled.h3`\n  margin-bottom: 6px;\n`;\n\nexport const CategoryName = styled.h4`\n  color: #555;\n  margin-bottom: 3px;\n`;\n\nexport const TodoList = styled.ul`\n  list-style-type: disc;\n  margin-bottom: 6px;\n  margin-left: 15px;\n`;\n\nexport const TodoItem = styled.li`\n  color: #777;\n`;\n\nexport const PhotoList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`;\n\nexport const Photo = styled.li`\n  width: 150px;\n`;\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, Col, Row } from 'antd';\nimport Modal from '../PublicTripsSections/Modal/Modal';\n\nimport {\n  TripDescription,\n  Category,\n  CategoryName,\n  TodoList,\n  TodoItem,\n  PhotoList,\n  Photo,\n} from './AllPopularTrips.style';\n\nconst AllPopularTrips = () => {\n  const [popularTrips, setPopularTrips] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n\n  useEffect(() => {\n    const fetchPopularTrips = async () => {\n      try {\n        const response = await axios.get(\n          'http://localhost:3000/api/trips/trips-with-likes'\n        );\n        setPopularTrips(response.data.trips);\n      } catch (error) {\n        console.error('Error fetching popular trips:', error);\n      }\n    };\n\n    fetchPopularTrips();\n  }, []);\n\n  const getRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n\n  const handlePhotoClick = photo => {\n    setSelectedPhoto(photo);\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <Row gutter={[16, 16]}>\n        {popularTrips.map(trip => (\n          <Col span={8} key={trip._id}>\n            <Card\n              style={{ marginBottom: '15px' }}\n              title={trip.title}\n              bordered={false}\n              headStyle={{\n                backgroundColor: getRandomColor(),\n                color: '#fafbfc',\n              }}\n            >\n              <TripDescription>{trip.description}</TripDescription>\n              <div>\n                <Category>Categories:</Category>\n                <ul>\n                  {trip.categories.map(category => (\n                    <li key={category._id}>\n                      <CategoryName>{category.nameCategory}</CategoryName>\n                      <TodoList>\n                        {category.todoList.map(todo => (\n                          <TodoItem key={todo._id}>{todo.todo}</TodoItem>\n                        ))}\n                      </TodoList>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div>\n                <h3>Photos:</h3>\n                <PhotoList>\n                  {trip.photos.map(photo => (\n                    <Photo key={photo.uuid}>\n                      <img\n                        src={photo.cdnUrl}\n                        alt={`Trip photo`}\n                        onClick={() => handlePhotoClick(photo.cdnUrl)}\n                        style={{\n                          width: '150px',\n                          cursor: 'pointer',\n                          boxShadow: '7px 11px 10px 1px rgba(223, 223, 223, 1)',\n                        }}\n                      />\n                    </Photo>\n                  ))}\n                </PhotoList>\n              </div>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n      {selectedPhoto && (\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          photo={selectedPhoto}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AllPopularTrips;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1262px;\n  margin: 0 auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-top: 70px;\n`;\n","import AllPopularTrips from '../../components/PopularTripsSections/AllPopularTrips';\nimport {Container} from \"./PopularTrips.style\"\n\nconst PopularTrips = () => {\n  return (\n    <Container>\n      <AllPopularTrips></AllPopularTrips>\n    </Container>\n  );\n};\n\nexport default PopularTrips;\n"],"names":["ModalUnstyled","_ref","open","onClose","photo","_jsx","Modal","slots","backdrop","StyledBackdrop","children","ModalContent","sx","width","src","alt","style","Backdrop","React","props","ref","className","other","_objectWithoutProperties","_excluded","_objectSpread","clsx","grey","styled","BaseModal","_templateObject","_taggedTemplateLiteral","_templateObject2","_ref2","theme","css","_templateObject3","palette","mode","TripDescription","Category","CategoryName","TodoList","_templateObject4","TodoItem","_templateObject5","PhotoList","_templateObject6","Photo","_templateObject7","_useState","useState","_useState2","_slicedToArray","popularTrips","setPopularTrips","_useState3","_useState4","setOpen","_useState5","_useState6","selectedPhoto","setSelectedPhoto","useEffect","fetchPopularTrips","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","data","trips","t0","console","error","stop","apply","arguments","getRandomColor","color","i","Math","floor","random","_jsxs","Row","gutter","map","trip","Col","span","Card","marginBottom","title","bordered","headStyle","backgroundColor","description","categories","category","nameCategory","todoList","todo","_id","photos","cdnUrl","onClick","handlePhotoClick","cursor","boxShadow","uuid","Container","AllPopularTrips"],"sourceRoot":""}