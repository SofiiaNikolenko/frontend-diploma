{"version":3,"file":"static/js/512.eed8d833.chunk.js","mappings":"sSACA,G,QAAyC,kD,SCOnCA,EAAiB,CACrBC,SAAU,CACRC,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,IAGVE,WAAY,CACVH,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,MAKNG,EAAqB,CACzBD,WAAY,CACVH,GAAI,CACFC,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,KA8Hd,EAzHyB,WACvB,IAAAC,EAAeC,EAAAA,EAAAA,UAARC,GAAsBC,EAAAA,EAAAA,GAAAH,EAAA,GAAlB,GACLI,GAAWC,EAAAA,EAAAA,MAuBjB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,KACfJ,EAAAA,EAAAA,MAACL,EAAAA,GAAIU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCnB,GAAc,IAClBU,KAAMA,EACNU,KAAK,WACLC,SA5BW,SAAAC,GACfC,EAAAA,EAAAA,KACQ,uCAAwC,CAC5CC,MAAOF,EAAOE,MACdC,SAAUH,EAAOG,WAElBC,MAAK,SAAAC,GACJjB,EAAKkB,cACLC,EAAAA,GAAAA,QAAc,oMACdjB,EAAS,SACX,IACCkB,OAAM,SAAAC,GACDA,EAAMJ,UAAsC,MAA1BI,EAAMJ,SAASK,OACnCH,EAAAA,GAAAA,MAAY,8HAEZA,EAAAA,GAAAA,MAAY,oLAEdI,QAAQF,MAAM,sBAAuBA,EACvC,GACJ,EAUMG,cAAe,CACbC,UAAW,CAAC,WAAY,WAAY,QACpCC,OAAQ,MAEVC,MAAO,CACLC,SAAU,KAEZC,oBAAkB,EAAAvB,SAAA,EAElBC,EAAAA,EAAAA,KAACR,EAAAA,EAAAA,KAAS,CACRW,KAAK,QACLoB,MAAM,SACNC,MAAO,CACL,CACEC,KAAM,QACNC,QAAS,kCAEX,CACEC,UAAU,EACVD,QAAS,8BAEX3B,UAEFC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAK,CACJT,QAAQnB,EAAAA,EAAAA,KAAC6B,EAAAA,EAAY,CAACC,UAAU,wBAChCC,YAAY,cAIhB/B,EAAAA,EAAAA,KAACR,EAAAA,EAAAA,KAAS,CACRW,KAAK,WACLoB,MAAM,WACNC,MAAO,CACL,CACEG,UAAU,EACVD,QAAS,gCAGbM,aAAW,EAAAjC,UAEXC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAAA,SAAc,CACbT,QAAQnB,EAAAA,EAAAA,KAACiC,EAAAA,EAAY,CAACH,UAAU,wBAChCC,YAAY,gBAIhB/B,EAAAA,EAAAA,KAACR,EAAAA,EAAAA,KAAS,CACRW,KAAK,UACLoB,MAAM,mBACNW,aAAc,CAAC,YACfF,aAAW,EACXR,MAAO,CACL,CACEG,UAAU,EACVD,QAAS,iCAEX,SAAAS,GAAA,IAAGC,EAAaD,EAAbC,cAAa,MAAQ,CACtBC,UAAS,SAACC,EAAGC,GACX,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OACb,IAAIC,MAAM,oDAHHF,QAAQG,SAKnB,EACD,GACD5C,UAEFC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAAA,SAAc,CACbT,QAAQnB,EAAAA,EAAAA,KAACiC,EAAAA,EAAY,CAACH,UAAU,wBAChCC,YAAY,wBAGhBlC,EAAAA,EAAAA,MAACL,EAAAA,EAAAA,MAASU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKb,GAAkB,IAAAU,SAAA,EAC/BC,EAAAA,EAAAA,KAAC4C,EAAAA,GAAM,CACLnB,KAAK,UACLoB,SAAS,SACTf,UAAWgB,EAA2B/C,SACvC,aAEQ,mCACsBC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAI,CAACC,GAAG,SAAQjD,SAAC,4BAK3D,ECpJA,EATqB,WACnB,OACEF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAACiD,EAAgB,MAGvB,C","sources":["webpack://react-homework-template/./src/components/Auth/RegistrationSections/RegistrationForm/RegistrationForm.module.css?2324","components/Auth/RegistrationSections/RegistrationForm/RegistrationForm.jsx","pages/Registration/Registration.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registrationFormButton\":\"RegistrationForm_registrationFormButton__TGfes\"};","import { Button, Form, Input } from 'antd';\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from './RegistrationForm.module.css';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst RegistrationForm = () => {\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n\n  const onFinish = values => {\n    axios\n      .post('http://localhost:3000/users/register', {\n        email: values.email,\n        password: values.password,\n      })\n      .then(response => {\n        form.resetFields();\n        toast.success('Перевір пошту та пройди верифікацію!!');\n        navigate('/login');\n      })\n      .catch(error => {\n        if (error.response && error.response.status === 409) {\n          toast.error('Email вже використовується!');\n        } else {\n          toast.error('Щось пішло не так! Спробуйте ще раз.');\n        }\n        console.error('There was an error!', error);\n      });\n  };\n\n  return (\n    <>\n      <ToastContainer />\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"register\"\n        onFinish={onFinish}\n        initialValues={{\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\n          prefix: '86',\n        }}\n        style={{\n          maxWidth: 600,\n        }}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"email\"\n          label=\"E-mail\"\n          rules={[\n            {\n              type: 'email',\n              message: 'The input is not valid E-mail!',\n            },\n            {\n              required: true,\n              message: 'Please input your E-mail!',\n            },\n          ]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"E-mail\"\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"password\"\n          label=\"Password\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your password!',\n            },\n          ]}\n          hasFeedback\n        >\n          <Input.Password\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Password\"\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"confirm\"\n          label=\"Confirm Password\"\n          dependencies={['password']}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: 'Please confirm your password!',\n            },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  new Error('The new password that you entered do not match!')\n                );\n              },\n            }),\n          ]}\n        >\n          <Input.Password\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Confirm password\"\n          />\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className={css.registrationFormButton}\n          >\n            Register\n          </Button>\n          If you have an account already <Link to=\"/login\"> log in now! </Link>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from \"components/Auth/RegistrationSections/RegistrationForm/RegistrationForm\";\n\nconst Registration = () => {\n  return (\n    <>\n      <h1>Registration</h1>\n      <RegistrationForm></RegistrationForm>\n    </>\n  );\n};\n\nexport default Registration;\n"],"names":["formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","_Form$useForm","Form","form","_slicedToArray","navigate","useNavigate","_jsxs","_Fragment","children","_jsx","ToastContainer","_objectSpread","name","onFinish","values","axios","email","password","then","response","resetFields","toast","catch","error","status","console","initialValues","residence","prefix","style","maxWidth","scrollToFirstError","label","rules","type","message","required","Input","UserOutlined","className","placeholder","hasFeedback","LockOutlined","dependencies","_ref","getFieldValue","validator","_","value","Promise","reject","Error","resolve","Button","htmlType","css","Link","to","RegistrationForm"],"sourceRoot":""}