{"version":3,"file":"static/js/542.ae53e0df.chunk.js","mappings":"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","sources":["components/UserSections/AddTripForm/AddPhotos/AddPhotos.jsx","components/UserSections/AddTripForm/AddTripForm.jsx","components/UserSections/AllUserTrips/AllUserTrips.jsx","components/UserSections/UpdateTrip/UpdateTrip.jsx","pages/User/User.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as LR from '@uploadcare/blocks';\nimport '@uploadcare/blocks/web/lr-file-uploader-regular.min.css';\n\nLR.registerBlocks(LR);\n\nconst AddPhotos = ({ onCdnUrlsChange }) => {\n  const [files, setFiles] = useState([]);\n  const [cdnUrls, setCdnUrls] = useState([]);\n  const ctxProviderRef = useRef(null);\n\n  useEffect(() => {\n    const ctxProvider = ctxProviderRef.current;\n    if (!ctxProvider) return;\n\n    const handleChangeEvent = event => {\n      const newFiles = event.detail.allEntries.filter(\n        file => file.status === 'success'\n      );\n      setFiles(newFiles);\n      setCdnUrls(prevCdnUrls => {\n        const newUrls = newFiles.map(file => ({\n          cdnUrl: file.cdnUrl,\n          uuid: file.uuid,\n        }));\n        const uniqueUrls = [\n          ...prevCdnUrls,\n          ...newUrls.filter(\n            newUrl => !prevCdnUrls.some(url => url.cdnUrl === newUrl.cdnUrl)\n          ),\n        ];\n        return uniqueUrls;\n      });\n      // setCdnUrls(prevCdnUrls => {\n      //   const newUrls = newFiles.map(file => file.cdnUrl);\n      //   const uniqueUrls = Array.from(new Set([...prevCdnUrls, ...newUrls]));\n      //   return uniqueUrls;\n      // });\n    };\n\n    ctxProvider.addEventListener('change', handleChangeEvent);\n\n    return () => {\n      ctxProvider.removeEventListener('change', handleChangeEvent);\n    };\n  }, []);\n\n  useEffect(() => {\n    onCdnUrlsChange(cdnUrls);\n  }, [cdnUrls]);\n\n  return (\n    <div>\n      <lr-config ctx-name=\"my-uploader\" pubkey=\"274c6cf9681b13936265\" />\n\n      <lr-file-uploader-regular ctx-name=\"my-uploader\" />\n\n      <lr-upload-ctx-provider ctx-name=\"my-uploader\" ref={ctxProviderRef} />\n\n      <div>\n        {files.map(file => (\n          <div key={file.uuid}>\n            <img src={file.cdnUrl} alt={file.fileInfo.originalFilename} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AddPhotos;\n\n// import React, { useEffect, useRef, useState } from 'react';\n// import * as LR from '@uploadcare/blocks';\n// import '@uploadcare/blocks/web/lr-file-uploader-regular.min.css';\n\n// LR.registerBlocks(LR);\n\n// const UploadComponent = () => {\n//   const [files, setFiles] = useState([]);\n//   const ctxProviderRef = useRef(null);\n\n//   useEffect(() => {\n//     const ctxProvider = ctxProviderRef.current;\n//     if (!ctxProvider) return;\n\n//     const handleChangeEvent = event => {\n//       setFiles([\n//         ...event.detail.allEntries.filter(file => file.status === 'success'),\n//       ]);\n//     };\n\n//     ctxProvider.addEventListener('change', handleChangeEvent);\n\n//     return () => {\n//       ctxProvider.removeEventListener('change', handleChangeEvent);\n//     };\n//   }, [setFiles]);\n\n//   return (\n//     <div>\n//       <lr-config ctx-name=\"my-uploader\" pubkey=\"274c6cf9681b13936265\" />\n\n//       <lr-file-uploader-regular ctx-name=\"my-uploader\" />\n\n//       <lr-upload-ctx-provider ctx-name=\"my-uploader\" ref={ctxProviderRef} />\n\n//       <div>\n//         {files.map(file => (\n//           <div key={file.uuid}>\n//             <img src={file.cdnUrl} alt={file.fileInfo.originalFilename} />\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default UploadComponent;\n","import { useState, useEffect } from 'react';\nimport AddPhotos from './AddPhotos/AddPhotos';\n\n// import {\n//   FormWrapper,\n//   FormTitle,\n//   FormElement,\n//   Label,\n//   Input,\n//   Checkbox,\n//   Button,\n//   CategoryContainer,\n//   TodoContainer,\n//   TodoInput,\n//   SmallButton,\n// } from './AddTripForm.style';\n\nconst AddTripForm = () => {\n  const initialState = {\n    title: '',\n    description: '',\n    categories: [\n      {\n        nameCategory: '',\n        todoList: [\n          {\n            todo: '',\n          },\n        ],\n        publicList: false,\n      },\n    ],\n    isPublic: false,\n    photos: [],\n  };\n\n  const [data, setData] = useState(initialState);\n  const [cdnUrls, setCdnUrls] = useState([]);\n\n  useEffect(() => {\n    const savedData = JSON.parse(localStorage.getItem('data'));\n\n    if (savedData) {\n      setData(savedData);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data));\n  }, [data]);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleCategoryChange = (event, index) => {\n    const { name, value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[index] = {\n        ...newCategories[index],\n        [name]: value,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handleTodoChange = (event, categoryIndex, todoIndex) => {\n    const { value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      const newTodoList = [...newCategories[categoryIndex].todoList];\n      newTodoList[todoIndex] = {\n        todo: value,\n      };\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        todoList: newTodoList,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handlePublicChange = event => {\n    const { checked } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      isPublic: checked,\n    }));\n  };\n\n  const handleCategoryPublicChange = (event, categoryIndex) => {\n    const { checked } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        publicList: checked,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const addCategory = () => {\n    setData(prevData => ({\n      ...prevData,\n      categories: [\n        ...prevData.categories,\n        {\n          nameCategory: '',\n          todoList: [\n            {\n              todo: '',\n            },\n          ],\n          publicList: false,\n        },\n      ],\n    }));\n  };\n\n  const addTodo = categoryIndex => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.push({\n      todo: '',\n    });\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const deleteCategory = categoryIndex => {\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories.splice(categoryIndex, 1);\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const deleteTodo = (categoryIndex, todoIndex) => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.splice(todoIndex, 1);\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const handleCdnUrlsChange = urls => {\n    setCdnUrls(urls);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const token = localStorage.getItem('token');\n    const url = 'http://localhost:3000/api/trips';\n\n    const updatedData = {\n      ...data,\n      photos: cdnUrls,\n    };\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(updatedData),\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        console.log('Response:', responseData);\n        setData(initialState);\n        localStorage.removeItem('data');\n        setCdnUrls([]);\n        window.location.reload();\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <>\n      <h1>Form</h1>\n      <form onSubmit={handleSubmit}>\n        {/* Title */}\n        <label htmlFor=\"title\">Title</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={data.title}\n          onChange={handleChange}\n        />\n\n        {/* Description */}\n        <label htmlFor=\"description\">Description</label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          value={data.description}\n          onChange={handleChange}\n        />\n\n        {/* Categories */}\n        <h2>Categories</h2>\n        {data.categories.map((category, categoryIndex) => (\n          <div key={categoryIndex}>\n            <label htmlFor={`category-${categoryIndex}`}>Category Name</label>\n            <input\n              type=\"text\"\n              id={`category-${categoryIndex}`}\n              name=\"nameCategory\"\n              value={category.nameCategory}\n              onChange={event => handleCategoryChange(event, categoryIndex)}\n            />\n\n            {/* Category Public */}\n            <label htmlFor={`category-public-${categoryIndex}`}>Public</label>\n            <input\n              type=\"checkbox\"\n              id={`category-public-${categoryIndex}`}\n              name=\"publicList\"\n              checked={category.publicList}\n              onChange={event =>\n                handleCategoryPublicChange(event, categoryIndex)\n              }\n            />\n\n            {/* Todo List */}\n            <h3>Todo List</h3>\n            {category.todoList.map((todo, todoIndex) => (\n              <div key={todoIndex}>\n                <label htmlFor={`todo-${categoryIndex}-${todoIndex}`}>\n                  Todo\n                </label>\n                <input\n                  type=\"text\"\n                  id={`todo-${categoryIndex}-${todoIndex}`}\n                  name=\"todo\"\n                  value={todo.todo}\n                  onChange={event =>\n                    handleTodoChange(event, categoryIndex, todoIndex)\n                  }\n                />\n\n                {/* Delete Todo */}\n                <button\n                  type=\"button\"\n                  onClick={() => deleteTodo(categoryIndex, todoIndex)}\n                >\n                  Delete Todo\n                </button>\n              </div>\n            ))}\n\n            {/* Add Todo */}\n            <button type=\"button\" onClick={() => addTodo(categoryIndex)}>\n              Add Todo\n            </button>\n\n            {/* Delete Category */}\n            <button\n              type=\"button\"\n              onClick={() => deleteCategory(categoryIndex)}\n            >\n              Delete Category\n            </button>\n          </div>\n        ))}\n\n        {/* Add Category */}\n        <button type=\"button\" onClick={addCategory}>\n          Add Category\n        </button>\n\n        {/* Public */}\n        <label htmlFor=\"isPublic\">Public</label>\n        <input\n          type=\"checkbox\"\n          id=\"isPublic\"\n          name=\"isPublic\"\n          checked={data.isPublic}\n          onChange={handlePublicChange}\n        />\n\n        <AddPhotos onCdnUrlsChange={handleCdnUrlsChange} />\n\n        {/* Submit */}\n        <button type=\"submit\">Submit</button>\n      </form>\n    </>\n  );\n};\n\nexport default AddTripForm;\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport React, { useState, useEffect } from 'react';\n\nconst AllUserTrips = () => {\n  const [trips, setTrips] = useState([]);\n  const token = localStorage.getItem('token');\n\n  useEffect(() => {\n    fetch('http://localhost:3000/api/trips', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(response => response.json())\n      .then(data => setTrips(data))\n      .catch(error => console.error('Error fetching trips:', error));\n  }, [token]);\n\n  return (\n    <>\n      <h1>All User Trips</h1>\n      <ul>\n        {trips.map(trip => (\n          <li key={trip._id}>\n            <h2>{trip.title}</h2>\n            <p>{trip.description}</p>\n            <h3>Categories:</h3>\n            <ul>\n              {trip.categories.map((category, index) => (\n                <li key={index}>\n                  <h4>{category.nameCategory}</h4>\n                  <ul>\n                    {category.todoList.map((todo, index) => (\n                      <li key={index}>{todo.todo}</li>\n                    ))}\n                  </ul>\n                </li>\n              ))}\n            </ul>\n            <p>Public: {trip.isPublic ? 'Yes' : 'No'}</p>\n            {trip.photos.length > 0 && (\n              <div>\n                <h3>Photos:</h3>\n                <ul>\n                  {trip.photos.map((photo, index) => (\n                    <li key={index}>\n                      <img src={photo.cdnUrl} alt={`Photo ${index + 1}`} />\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default AllUserTrips;\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { useState, useEffect } from 'react';\nimport {\n  deleteFile,\n  UploadcareSimpleAuthSchema,\n} from '@uploadcare/rest-client';\n\nimport AddPhotos from '../AddTripForm/AddPhotos/AddPhotos';\n\nconst UpdateTrip = () => {\n  const initialState = {\n    title: '',\n    description: '',\n    categories: [\n      {\n        nameCategory: '',\n        todoList: [\n          {\n            todo: '',\n          },\n        ],\n        publicList: false,\n      },\n    ],\n    isPublic: false,\n    photos: [],\n  };\n\n  const [data, setData] = useState(initialState);\n  const [cdnUrls, setCdnUrls] = useState([]);\n  const [trips, setTrips] = useState([]);\n  const [selectedTripId, setSelectedTripId] = useState(null);\n  const [isTripSelected, setIsTripSelected] = useState(false);\n\n  const uploadcareSimpleAuthSchema = new UploadcareSimpleAuthSchema({\n    publicKey: \"274c6cf9681b13936265\",\n    secretKey: \"9cfba5a3ce13072e7ac2\",\n  });\n\n  useEffect(() => {\n    const savedData = JSON.parse(localStorage.getItem('data'));\n\n    if (savedData) {\n      setData(savedData);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(data));\n  }, [data]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const url = 'http://localhost:3000/api/trips';\n\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        setTrips(responseData);\n      })\n      .catch(error => {\n        console.error('Error fetching trips:', error);\n      });\n  }, []);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleCategoryChange = (event, index) => {\n    const { name, value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[index] = {\n        ...newCategories[index],\n        [name]: value,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handleTodoChange = (event, categoryIndex, todoIndex) => {\n    const { value } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      const newTodoList = [...newCategories[categoryIndex].todoList];\n      newTodoList[todoIndex] = {\n        todo: value,\n      };\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        todoList: newTodoList,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const handlePublicChange = event => {\n    const { checked } = event.target;\n\n    setData(prevData => ({\n      ...prevData,\n      isPublic: checked,\n    }));\n  };\n\n  const handleCategoryPublicChange = (event, categoryIndex) => {\n    const { checked } = event.target;\n\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories[categoryIndex] = {\n        ...newCategories[categoryIndex],\n        publicList: checked,\n      };\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const addCategory = () => {\n    setData(prevData => ({\n      ...prevData,\n      categories: [\n        ...prevData.categories,\n        {\n          nameCategory: '',\n          todoList: [\n            {\n              todo: '',\n            },\n          ],\n          publicList: false,\n        },\n      ],\n    }));\n  };\n\n  const addTodo = categoryIndex => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.push({\n      todo: '',\n    });\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const deleteCategory = categoryIndex => {\n    setData(prevData => {\n      const newCategories = [...prevData.categories];\n      newCategories.splice(categoryIndex, 1);\n\n      return {\n        ...prevData,\n        categories: newCategories,\n      };\n    });\n  };\n\n  const deleteTodo = (categoryIndex, todoIndex) => {\n    const updatedCategories = [...data.categories];\n    updatedCategories[categoryIndex].todoList.splice(todoIndex, 1);\n    setData(prevData => ({\n      ...prevData,\n      categories: updatedCategories,\n    }));\n  };\n\n  const handleCdnUrlsChange = urls => {\n    setCdnUrls(urls);\n  };\n\n  // const handlePhotoDelete = index => {\n  //   const updatedPhotos = [...data.photos];\n  //   updatedPhotos.splice(index, 1);\n  //   setData(prevData => ({\n  //     ...prevData,\n  //     photos: updatedPhotos,\n  //   }));\n  // };\n  const handlePhotoDelete = index => {\n    const updatedPhotos = [...data.photos];\n    const deletedPhoto = updatedPhotos.splice(index, 1)[0];\n\n    // Видалення фото з Uploadcare за його UUID\n    deleteFile(\n      { uuid: deletedPhoto.uuid },\n      { authSchema: uploadcareSimpleAuthSchema }\n    )\n      .then(() => {\n        console.log('Photo successfully deleted from Uploadcare');\n      })\n      .catch(error => {\n        console.error('Error deleting photo from Uploadcare:', error);\n      });\n\n    setData(prevData => ({\n      ...prevData,\n      photos: updatedPhotos,\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const token = localStorage.getItem('token');\n    const url = `http://localhost:3000/api/trips/${selectedTripId}`;\n\n    const updatedPhotos = data.photos.map(photo => {\n      const cdnUrl = cdnUrls.find(url => url === photo.cdnUrl);\n      return cdnUrl\n        ? { cdnUrl, uuid: photo.uuid }\n        : { cdnUrl: photo.cdnUrl, uuid: photo.uuid };\n    });\n\n    cdnUrls.forEach(newPhoto => {\n      if (!data.photos.find(photo => photo.cdnUrl === newPhoto.cdnUrl)) {\n        updatedPhotos.push({ cdnUrl: newPhoto.cdnUrl, uuid: newPhoto.uuid });\n      }\n    });\n\n    const updatedData = {\n      ...data,\n      categories: data.categories.map(category => ({\n        nameCategory: category.nameCategory,\n        todoList: category.todoList.map(todo => ({\n          todo: todo.todo,\n        })),\n        publicList: category.publicList,\n      })),\n      photos: [...updatedPhotos],\n    };\n\n    fetch(url, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(updatedData),\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        console.log('Response:', responseData);\n        setData(initialState);\n        localStorage.removeItem('data');\n        setCdnUrls([]);\n        // window.location.reload();\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  const handleTripSelect = tripId => {\n    const selectedTrip = trips.find(trip => trip._id === tripId);\n    setData({\n      title: selectedTrip.title,\n      description: selectedTrip.description,\n      categories: selectedTrip.categories.map(category => ({\n        nameCategory: category.nameCategory,\n        todoList: category.todoList.map(todo => ({\n          todo: todo.todo,\n        })),\n        publicList: category.publicList,\n      })),\n      isPublic: selectedTrip.isPublic,\n      photos: selectedTrip.photos.map(photo => ({\n        cdnUrl: photo.cdnUrl,\n        uuid: photo.uuid,\n      })),\n    });\n    setCdnUrls(selectedTrip.photos.map(photo => photo.cdnUrl));\n    setSelectedTripId(tripId);\n    setIsTripSelected(true);\n  };\n\n  return (\n    <>\n      <h1>Form</h1>\n\n      <h2>Select Trip to Edit</h2>\n      <ul>\n        {trips.map(trip => (\n          <li key={trip._id} onClick={() => handleTripSelect(trip._id)}>\n            {trip.title}\n          </li>\n        ))}\n      </ul>\n\n      {isTripSelected && (\n        <form onSubmit={handleSubmit}>\n          {/* Title */}\n          <label htmlFor=\"title\">Title</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={data.title}\n            onChange={handleChange}\n          />\n\n          {/* Description */}\n          <label htmlFor=\"description\">Description</label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            value={data.description}\n            onChange={handleChange}\n          />\n\n          {/* Categories */}\n          <h2>Categories</h2>\n          {data.categories.map((category, categoryIndex) => (\n            <div key={categoryIndex}>\n              <label htmlFor={`category-${categoryIndex}`}>Category Name</label>\n              <input\n                type=\"text\"\n                id={`category-${categoryIndex}`}\n                name=\"nameCategory\"\n                value={category.nameCategory}\n                onChange={event => handleCategoryChange(event, categoryIndex)}\n              />\n\n              {/* Category Public */}\n              <label htmlFor={`category-public-${categoryIndex}`}>Public</label>\n              <input\n                type=\"checkbox\"\n                id={`category-public-${categoryIndex}`}\n                name=\"publicList\"\n                checked={category.publicList}\n                onChange={event =>\n                  handleCategoryPublicChange(event, categoryIndex)\n                }\n              />\n\n              {/* Todo List */}\n              <h3>Todo List</h3>\n              {category.todoList.map((todo, todoIndex) => (\n                <div key={todoIndex}>\n                  <label htmlFor={`todo-${categoryIndex}-${todoIndex}`}>\n                    Todo\n                  </label>\n                  <input\n                    type=\"text\"\n                    id={`todo-${categoryIndex}-${todoIndex}`}\n                    name=\"todo\"\n                    value={todo.todo}\n                    onChange={event =>\n                      handleTodoChange(event, categoryIndex, todoIndex)\n                    }\n                  />\n\n                  {/* Delete Todo */}\n                  <button\n                    type=\"button\"\n                    onClick={() => deleteTodo(categoryIndex, todoIndex)}\n                  >\n                    Delete Todo\n                  </button>\n                </div>\n              ))}\n\n              {/* Add Todo */}\n              <button type=\"button\" onClick={() => addTodo(categoryIndex)}>\n                Add Todo\n              </button>\n\n              {/* Delete Category */}\n              <button\n                type=\"button\"\n                onClick={() => deleteCategory(categoryIndex)}\n              >\n                Delete Category\n              </button>\n            </div>\n          ))}\n\n          {/* Add Category */}\n          <button type=\"button\" onClick={addCategory}>\n            Add Category\n          </button>\n\n          {/* Public */}\n          <label htmlFor=\"isPublic\">Public</label>\n          <input\n            type=\"checkbox\"\n            id=\"isPublic\"\n            name=\"isPublic\"\n            checked={data.isPublic}\n            onChange={handlePublicChange}\n          />\n\n          <ul>\n            {data.photos.map((photo, index) => (\n              <li key={index}>\n                <img src={photo.cdnUrl} alt={`Trip photo ${index}`} />\n                <button onClick={() => handlePhotoDelete(index)}>Delete</button>\n              </li>\n            ))}\n          </ul>\n\n          <AddPhotos onCdnUrlsChange={handleCdnUrlsChange} />\n\n          {/* Submit */}\n          <button type=\"submit\">Submit</button>\n        </form>\n      )}\n    </>\n  );\n};\n\nexport default UpdateTrip;\n","import AddTripForm from '../../components/UserSections/AddTripForm/AddTripForm';\nimport AllUserTrips from '../../components/UserSections/AllUserTrips/AllUserTrips';\nimport UpdateTrip from '../../components/UserSections/UpdateTrip/UpdateTrip';\n\nconst User = () => {\n  return (\n    <>\n      <h1>User</h1>\n      <AddTripForm></AddTripForm>\n      <br />\n      <AllUserTrips></AllUserTrips>\n      <br />\n      <UpdateTrip></UpdateTrip>\n    </>\n  );\n};\n\nexport default User;\n"],"names":["LR","_ref","onCdnUrlsChange","_useState","useState","_useState2","_slicedToArray","files","setFiles","_useState3","_useState4","cdnUrls","setCdnUrls","ctxProviderRef","useRef","useEffect","ctxProvider","current","handleChangeEvent","event","newFiles","detail","allEntries","filter","file","status","prevCdnUrls","newUrls","map","cdnUrl","uuid","concat","_toConsumableArray","newUrl","some","url","addEventListener","removeEventListener","_jsxs","children","_jsx","pubkey","ref","src","alt","fileInfo","originalFilename","initialState","title","description","categories","nameCategory","todoList","todo","publicList","isPublic","photos","data","setData","savedData","JSON","parse","localStorage","getItem","setItem","stringify","handleChange","_event$target","target","name","value","prevData","_objectSpread","_defineProperty","_Fragment","onSubmit","preventDefault","token","updatedData","fetch","method","headers","Authorization","body","then","response","json","responseData","console","log","removeItem","window","location","reload","catch","error","htmlFor","type","id","onChange","category","categoryIndex","index","_event$target2","newCategories","handleCategoryChange","checked","handleCategoryPublicChange","todoIndex","newTodoList","handleTodoChange","onClick","updatedCategories","splice","deleteTodo","push","addTodo","deleteCategory","AddPhotos","urls","trips","setTrips","trip","length","photo","_id","_useState5","_useState6","_useState7","_useState8","selectedTripId","setSelectedTripId","_useState9","_useState10","isTripSelected","setIsTripSelected","uploadcareSimpleAuthSchema","UploadcareSimpleAuthSchema","publicKey","secretKey","tripId","selectedTrip","find","handleTripSelect","updatedPhotos","forEach","newPhoto","deletedPhoto","deleteFile","authSchema","handlePhotoDelete","AddTripForm","AllUserTrips","UpdateTrip"],"sourceRoot":""}